<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1" localId="0">
   <annotation translatorVersion="3.11.0" translatorOptions="EnableAnnotations,EnableLocators,DisableListDemotion,DisableListPromotion" signatureLevel="Overloads" xsi:type="a:CqlToElmInfo"/>
   <annotation xsi:type="a:Annotation">
      <a:s r="1155">
         <a:s>/*******************************************************************************
 * NOTICE: This Library is adpated from [CDS Connect](https://cds.ahrq.gov), a 
 * project funded by the U.S. Agency for Healthcare Research and Quality (AHRQ).
 * It is made available via an Apache 2.0 license.
 * It has been modified to remove underscores from the file and library name, 
 * in accordance to guidance from the FHIR Clinical Guidelines IG.
*******************************************************************************/
// CDS Connect Commons for FHIRv401
// Initial version (1.0.0) based on CDS_Connect_Commons_for_FHIRv400.cql v1.0.1
// with the addition of &quot;EncounterLookback&quot; and &quot;MedicationDispenseLookback&quot; functions.
library CDSConnectCommonsforFHIRv401 version '1.0.0'</a:s>
      </a:s>
   </annotation>
   <identifier id="CDSConnectCommonsforFHIRv401" system="http://cancerscreeningcds.github.io/crcsm-cds" version="1.0.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localId="1" localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localId="206" locator="13:1-13:26" localIdentifier="FHIR" uri="http://hl7.org/fhir" version="4.0.1">
         <annotation xsi:type="a:Annotation">
            <a:s r="206">
               <a:s>using </a:s>
               <a:s>
                  <a:s>FHIR</a:s>
               </a:s>
               <a:s> version '4.0.1'</a:s>
            </a:s>
         </annotation>
      </def>
   </usings>
   <includes>
      <def localId="207" locator="16:1-16:54" localIdentifier="FHIRHelpers" path="http://cancerscreeningcds.github.io/crcsm-cds/FHIRHelpers" version="4.0.1">
         <annotation xsi:type="a:Annotation">
            <a:s r="207">
               <a:s>// Include the FHIRHelpers library for simplifying interacton w/ the FHIR data model
include </a:s>
               <a:s>
                  <a:s>FHIRHelpers</a:s>
               </a:s>
               <a:s> version '4.0.1' called FHIRHelpers</a:s>
            </a:s>
         </annotation>
      </def>
   </includes>
   <codeSystems>
      <def localId="208" locator="18:1-18:97" name="AIVERSTATUS" id="http://terminology.hl7.org/CodeSystem/allergyintolerance-verification" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="208">
               <a:s>codesystem &quot;AIVERSTATUS&quot;: 'http://terminology.hl7.org/CodeSystem/allergyintolerance-verification'</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="209" locator="19:1-19:94" name="AICLINSTATUS" id="http://terminology.hl7.org/CodeSystem/allergyintolerance-clinical" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="209">
               <a:s>codesystem &quot;AICLINSTATUS&quot;: 'http://terminology.hl7.org/CodeSystem/allergyintolerance-clinical'</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="210" locator="20:1-20:88" name="CONDVERSTATUS" id="http://terminology.hl7.org/CodeSystem/condition-ver-status" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="210">
               <a:s>codesystem &quot;CONDVERSTATUS&quot;: 'http://terminology.hl7.org/CodeSystem/condition-ver-status'</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="211" locator="21:1-21:87" name="CONDCLINSTATUS" id="http://terminology.hl7.org/CodeSystem/condition-clinical" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="211">
               <a:s>codesystem &quot;CONDCLINSTATUS&quot;: 'http://terminology.hl7.org/CodeSystem/condition-clinical'</a:s>
            </a:s>
         </annotation>
      </def>
   </codeSystems>
   <codes>
      <def localId="212" locator="22:1-22:92" name="AllergyIntolerance Confirmed code" id="confirmed" display="Confirmed" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="212">
               <a:s>code &quot;AllergyIntolerance Confirmed code&quot;: 'confirmed' from </a:s>
               <a:s r="213">
                  <a:s>&quot;AIVERSTATUS&quot;</a:s>
               </a:s>
               <a:s> display 'Confirmed'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="213" locator="22:60-22:72" name="AIVERSTATUS"/>
      </def>
      <def localId="214" locator="23:1-23:84" name="AllergyIntolerance Active code" id="active" display="Active" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="214">
               <a:s>code &quot;AllergyIntolerance Active code&quot;: 'active' from </a:s>
               <a:s r="215">
                  <a:s>&quot;AICLINSTATUS&quot;</a:s>
               </a:s>
               <a:s> display 'Active'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="215" locator="23:54-23:67" name="AICLINSTATUS"/>
      </def>
      <def localId="216" locator="24:1-24:85" name="Condition Confirmed code" id="confirmed" display="Confirmed" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="216">
               <a:s>code &quot;Condition Confirmed code&quot;: 'confirmed' from </a:s>
               <a:s r="217">
                  <a:s>&quot;CONDVERSTATUS&quot;</a:s>
               </a:s>
               <a:s> display 'Confirmed'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="217" locator="24:51-24:65" name="CONDVERSTATUS"/>
      </def>
      <def localId="218" locator="25:1-25:77" name="Condition Active code" id="active" display="Active" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="218">
               <a:s>code &quot;Condition Active code&quot;: 'active' from </a:s>
               <a:s r="219">
                  <a:s>&quot;CONDCLINSTATUS&quot;</a:s>
               </a:s>
               <a:s> display 'Active'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="219" locator="25:45-25:60" name="CONDCLINSTATUS"/>
      </def>
      <def localId="220" locator="26:1-26:89" name="Condition Recurrence code" id="recurrence" display="Recurrence" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="220">
               <a:s>code &quot;Condition Recurrence code&quot;: 'recurrence' from </a:s>
               <a:s r="221">
                  <a:s>&quot;CONDCLINSTATUS&quot;</a:s>
               </a:s>
               <a:s> display 'Recurrence'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="221" locator="26:53-26:68" name="CONDCLINSTATUS"/>
      </def>
      <def localId="222" locator="27:1-27:80" name="Condition Relapse code" id="relapse" display="Relapse" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="222">
               <a:s>code &quot;Condition Relapse code&quot;: 'relapse' from </a:s>
               <a:s r="223">
                  <a:s>&quot;CONDCLINSTATUS&quot;</a:s>
               </a:s>
               <a:s> display 'Relapse'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="223" locator="27:47-27:62" name="CONDCLINSTATUS"/>
      </def>
   </codes>
   <concepts>
      <def localId="224" locator="28:1-28:99" name="AllergyIntolerance Confirmed" display="Confirmed" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="224">
               <a:s>concept &quot;AllergyIntolerance Confirmed&quot;: { </a:s>
               <a:s r="225">
                  <a:s>&quot;AllergyIntolerance Confirmed code&quot;</a:s>
               </a:s>
               <a:s> } display 'Confirmed'</a:s>
            </a:s>
         </annotation>
         <code localId="225" locator="28:43-28:77" name="AllergyIntolerance Confirmed code"/>
      </def>
      <def localId="226" locator="29:1-29:90" name="AllergyIntolerance Active" display="Active" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="226">
               <a:s>concept &quot;AllergyIntolerance Active&quot;: { </a:s>
               <a:s r="227">
                  <a:s>&quot;AllergyIntolerance Active code&quot;</a:s>
               </a:s>
               <a:s> } display 'Active'</a:s>
            </a:s>
         </annotation>
         <code localId="227" locator="29:40-29:71" name="AllergyIntolerance Active code"/>
      </def>
      <def localId="228" locator="30:1-30:81" name="Condition Confirmed" display="Confirmed" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="228">
               <a:s>concept &quot;Condition Confirmed&quot;: { </a:s>
               <a:s r="229">
                  <a:s>&quot;Condition Confirmed code&quot;</a:s>
               </a:s>
               <a:s> } display 'Confirmed'</a:s>
            </a:s>
         </annotation>
         <code localId="229" locator="30:34-30:59" name="Condition Confirmed code"/>
      </def>
      <def localId="230" locator="31:1-31:72" name="Condition Active" display="Active" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="230">
               <a:s>concept &quot;Condition Active&quot;: { </a:s>
               <a:s r="231">
                  <a:s>&quot;Condition Active code&quot;</a:s>
               </a:s>
               <a:s> } display 'Active'</a:s>
            </a:s>
         </annotation>
         <code localId="231" locator="31:31-31:53" name="Condition Active code"/>
      </def>
      <def localId="232" locator="32:1-32:84" name="Condition Recurrence" display="Recurrence" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="232">
               <a:s>concept &quot;Condition Recurrence&quot;: { </a:s>
               <a:s r="233">
                  <a:s>&quot;Condition Recurrence code&quot;</a:s>
               </a:s>
               <a:s> } display 'Recurrence'</a:s>
            </a:s>
         </annotation>
         <code localId="233" locator="32:35-32:61" name="Condition Recurrence code"/>
      </def>
      <def localId="234" locator="33:1-33:75" name="Condition Relapse" display="Relapse" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="234">
               <a:s>concept &quot;Condition Relapse&quot;: { </a:s>
               <a:s r="235">
                  <a:s>&quot;Condition Relapse code&quot;</a:s>
               </a:s>
               <a:s> } display 'Relapse'</a:s>
            </a:s>
         </annotation>
         <code localId="235" locator="33:32-33:55" name="Condition Relapse code"/>
      </def>
   </concepts>
   <statements>
      <def localId="236" locator="45:1-49:54" name="PeriodToInterval" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="236">
               <a:s>// -------------------------------------------------- GENERAL ---------------------------------------------------------

/**
 * Converts a FHIR Period to a CQL Interval.  FHIRHelpers provides a function for this, but
 * FHIRHelpers provides several overloads of the ToInterval function, and the JavaScript CQL
 * Execution Framework apparently does not handle this correctly.  Creating uniquely named
 * functions here ensures safe execution.
 * @param period - a FHIR Period
 * @returns {System.Interval} a CQL Interval or null if null was passed in
 */
define function PeriodToInterval(period FHIR.Period):
  </a:s>
               <a:s r="239">
                  <a:s r="239">
                     <a:s>if </a:s>
                     <a:s r="241">
                        <a:s r="240">
                           <a:s>period</a:s>
                        </a:s>
                        <a:s> is null</a:s>
                     </a:s>
                     <a:s r="242"> then
    null
  else
    </a:s>
                     <a:s r="249">
                        <a:s>Interval[</a:s>
                        <a:s r="245">
                           <a:s r="244">
                              <a:s r="243">
                                 <a:s>period</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="244">
                                 <a:s>&quot;start&quot;</a:s>
                              </a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="245">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="248">
                           <a:s r="247">
                              <a:s r="246">
                                 <a:s>period</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="247">
                                 <a:s>&quot;end&quot;</a:s>
                              </a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="248">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                        <a:s>]</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="239" locator="46:3-49:54" xsi:type="If">
            <condition localId="241" locator="46:6-46:19" xsi:type="IsNull">
               <operand localId="240" locator="46:6-46:11" name="period" xsi:type="OperandRef"/>
            </condition>
            <then localId="250" xsi:type="As">
               <operand localId="242" locator="47:5-47:8" xsi:type="Null"/>
               <asTypeSpecifier localId="251" xsi:type="IntervalTypeSpecifier">
                  <pointType localId="252" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               </asTypeSpecifier>
            </then>
            <else localId="249" locator="49:5-49:54" lowClosed="true" highClosed="true" xsi:type="Interval">
               <low localId="245" locator="49:14-49:33" path="value" xsi:type="Property">
                  <source localId="244" locator="49:14-49:27" path="start" xsi:type="Property">
                     <source localId="243" locator="49:14-49:19" name="period" xsi:type="OperandRef"/>
                  </source>
               </low>
               <high localId="248" locator="49:36-49:53" path="value" xsi:type="Property">
                  <source localId="247" locator="49:36-49:47" path="end" xsi:type="Property">
                     <source localId="246" locator="49:36-49:41" name="period" xsi:type="OperandRef"/>
                  </source>
               </high>
            </else>
         </expression>
         <operand localId="238" name="period">
            <operandTypeSpecifier localId="237" locator="45:41-45:51" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="253" locator="59:1-63:83" name="RangeToInterval" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="253">
               <a:s>/**
 * Converts a FHIR Range to a CQL Interval.  FHIRHelpers provides a function for this, but
 * FHIRHelpers provides several overloads of the ToInterval function, and the JavaScript CQL
 * Execution Framework apparently does not handle this correctly.  Creating uniquely named
 * functions here ensures safe execution.
 * @param range - a FHIR Range
 * @returns {System.Interval} a CQL Interval or null if null was passed in
 */
define function RangeToInterval(range FHIR.Range):
  </a:s>
               <a:s r="256">
                  <a:s r="256">
                     <a:s>if </a:s>
                     <a:s r="258">
                        <a:s r="257">
                           <a:s>range</a:s>
                        </a:s>
                        <a:s> is null</a:s>
                     </a:s>
                     <a:s r="259"> then
    null
  else
    </a:s>
                     <a:s r="268">
                        <a:s>Interval[</a:s>
                        <a:s r="263">
                           <a:s r="260">
                              <a:s>FHIRHelpers</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="263">
                              <a:s>ToQuantity(</a:s>
                              <a:s r="262">
                                 <a:s r="261">
                                    <a:s>range</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="262">
                                    <a:s>low</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="267">
                           <a:s r="264">
                              <a:s>FHIRHelpers</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="267">
                              <a:s>ToQuantity(</a:s>
                              <a:s r="266">
                                 <a:s r="265">
                                    <a:s>range</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="266">
                                    <a:s>high</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>]</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="256" locator="60:3-63:83" xsi:type="If">
            <condition localId="258" locator="60:6-60:18" xsi:type="IsNull">
               <operand localId="257" locator="60:6-60:10" name="range" xsi:type="OperandRef"/>
            </condition>
            <then localId="269" xsi:type="As">
               <operand localId="259" locator="61:5-61:8" xsi:type="Null"/>
               <asTypeSpecifier localId="270" xsi:type="IntervalTypeSpecifier">
                  <pointType localId="271" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
               </asTypeSpecifier>
            </then>
            <else localId="268" locator="63:5-63:83" lowClosed="true" highClosed="true" xsi:type="Interval">
               <low localId="263" locator="63:14-63:46" name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand localId="262" locator="63:37-63:45" path="low" xsi:type="Property">
                     <source localId="261" locator="63:37-63:41" name="range" xsi:type="OperandRef"/>
                  </operand>
               </low>
               <high localId="267" locator="63:49-63:82" name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand localId="266" locator="63:72-63:81" path="high" xsi:type="Property">
                     <source localId="265" locator="63:72-63:76" name="range" xsi:type="OperandRef"/>
                  </operand>
               </high>
            </else>
         </expression>
         <operand localId="255" name="range">
            <operandTypeSpecifier localId="254" locator="59:39-59:48" name="fhir:Range" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="272" locator="74:1-75:69" name="Verified" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="272">
               <a:s>// -------------------------------------------------- OBSERVATIONS -----------------------------------------------------

/**
 * Observations that are complete and verified. In FHIR R4, there are three statuses that indicate this state: 'final',
 * 'corrected', and 'amended'.
 * @see http://hl7.org/fhir/R4/valueset-observation-status.html
 * @param ObsList - a list of Observations
 * @returns {List&lt;Observation>} a list of verified Observations, or null if null was passed in
 */
define function Verified(ObsList List&lt;Observation>):
  </a:s>
               <a:s r="286">
                  <a:s r="286">
                     <a:s>
                        <a:s r="276">
                           <a:s r="277">
                              <a:s>
                                 <a:s>ObsList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> O</a:s>
                        </a:s>
                     </a:s>
                     <a:s> </a:s>
                     <a:s r="285">
                        <a:s>where </a:s>
                        <a:s r="285">
                           <a:s r="280">
                              <a:s r="279">
                                 <a:s r="278">
                                    <a:s>O</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="279">
                                    <a:s>status</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="280">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> in </a:s>
                           <a:s r="281">
                              <a:s>{</a:s>
                              <a:s r="282">
                                 <a:s>'final'</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="283">
                                 <a:s>'corrected'</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="284">
                                 <a:s>'amended'</a:s>
                              </a:s>
                              <a:s>}</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="286" locator="75:3-75:69" xsi:type="Query">
            <source localId="276" locator="75:3-75:11" alias="O">
               <expression localId="277" locator="75:3-75:9" name="ObsList" xsi:type="OperandRef"/>
            </source>
            <where localId="285" locator="75:13-75:69" xsi:type="In">
               <operand localId="280" locator="75:19-75:32" path="value" xsi:type="Property">
                  <source localId="279" locator="75:19-75:26" path="status" scope="O" xsi:type="Property"/>
               </operand>
               <operand localId="281" locator="75:37-75:69" xsi:type="List">
                  <element localId="282" locator="75:38-75:44" valueType="t:String" value="final" xsi:type="Literal"/>
                  <element localId="283" locator="75:47-75:57" valueType="t:String" value="corrected" xsi:type="Literal"/>
                  <element localId="284" locator="75:60-75:68" valueType="t:String" value="amended" xsi:type="Literal"/>
               </operand>
            </where>
         </expression>
         <operand localId="275" name="ObsList">
            <operandTypeSpecifier localId="273" locator="74:34-74:50" xsi:type="ListTypeSpecifier">
               <elementType localId="274" locator="74:39-74:49" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="287" locator="83:1-85:102" name="WithUnit" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="287">
               <a:s>/**
 * Observations that have quantity values recorded in the requested unit.
 * @param ObsList - a list of Observations
 * @param Unit - the unit to require in the Observations quantity value
 * @returns {List&lt;Observation>} a list of Observations with the required unit, or null if null was passed in
 */
define function WithUnit(ObsList List&lt;Observation>, Unit String):
  </a:s>
               <a:s r="316">
                  <a:s r="316">
                     <a:s>
                        <a:s r="293">
                           <a:s r="294">
                              <a:s>
                                 <a:s>ObsList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> O</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="295">
                        <a:s>where </a:s>
                        <a:s r="295">
                           <a:s r="296">
                              <a:s r="302">
                                 <a:s r="301">
                                    <a:s r="297">
                                       <a:s>(</a:s>
                                       <a:s r="297">
                                          <a:s r="299">
                                             <a:s r="298">
                                                <a:s>O</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="299">
                                                <a:s>value</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="300">
                                             <a:s>FHIR.Quantity</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="301">
                                       <a:s>unit</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="302">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="303">
                                 <a:s>Unit</a:s>
                              </a:s>
                           </a:s>
                           <a:s> or </a:s>
                           <a:s r="306">
                              <a:s r="312">
                                 <a:s r="311">
                                    <a:s r="307">
                                       <a:s>(</a:s>
                                       <a:s r="307">
                                          <a:s r="309">
                                             <a:s r="308">
                                                <a:s>O</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="309">
                                                <a:s>value</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="310">
                                             <a:s>FHIR.Quantity</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="311">
                                       <a:s>code</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="312">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="313">
                                 <a:s>Unit</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="316" locator="84:3-85:102" xsi:type="Query">
            <source localId="293" locator="84:3-84:11" alias="O">
               <expression localId="294" locator="84:3-84:9" name="ObsList" xsi:type="OperandRef"/>
            </source>
            <where localId="295" locator="85:5-85:102" xsi:type="Or">
               <operand localId="296" locator="85:11-85:54" xsi:type="Equal">
                  <signature localId="304" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="305" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="302" locator="85:11-85:47" path="value" xsi:type="Property">
                     <source localId="301" locator="85:11-85:41" path="unit" xsi:type="Property">
                        <source localId="297" locator="85:11-85:36" strict="false" xsi:type="As">
                           <operand localId="299" locator="85:12-85:18" path="value" scope="O" xsi:type="Property"/>
                           <asTypeSpecifier localId="300" locator="85:23-85:35" name="fhir:Quantity" xsi:type="NamedTypeSpecifier"/>
                        </source>
                     </source>
                  </operand>
                  <operand localId="303" locator="85:51-85:54" name="Unit" xsi:type="OperandRef"/>
               </operand>
               <operand localId="306" locator="85:59-85:102" xsi:type="Equal">
                  <signature localId="314" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="315" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="312" locator="85:59-85:95" path="value" xsi:type="Property">
                     <source localId="311" locator="85:59-85:89" path="code" xsi:type="Property">
                        <source localId="307" locator="85:59-85:84" strict="false" xsi:type="As">
                           <operand localId="309" locator="85:60-85:66" path="value" scope="O" xsi:type="Property"/>
                           <asTypeSpecifier localId="310" locator="85:71-85:83" name="fhir:Quantity" xsi:type="NamedTypeSpecifier"/>
                        </source>
                     </source>
                  </operand>
                  <operand localId="313" locator="85:99-85:102" name="Unit" xsi:type="OperandRef"/>
               </operand>
            </where>
         </expression>
         <operand localId="290" name="ObsList">
            <operandTypeSpecifier localId="288" locator="83:34-83:50" xsi:type="ListTypeSpecifier">
               <elementType localId="289" locator="83:39-83:49" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="292" name="Unit">
            <operandTypeSpecifier localId="291" locator="83:58-83:63" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="317" locator="95:1-101:43" name="ObservationLookBack" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="317">
               <a:s>/**
 * Observations with an effective or issued date in the specified &quot;look back&quot; period.  For example, LDL-C Tests in the
 * last 6 years.
 * TODO: Rename to LookBack once the execution engine supports overloaded functions.
 * @param ObsList - a list of Observations
 * @returns {List&lt;Observation>} a list of Observations with effective or issued date specified lookback period, or null
 * if null was passed in
 */
define function ObservationLookBack(ObsList List&lt;Observation>, LookBack System.Quantity):
  </a:s>
               <a:s r="375">
                  <a:s r="375">
                     <a:s>
                        <a:s r="323">
                           <a:s r="324">
                              <a:s>
                                 <a:s>ObsList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> O</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="325">
                           <a:s>LookBackInterval: </a:s>
                           <a:s r="336">
                              <a:s>Interval[</a:s>
                              <a:s r="326">
                                 <a:s r="329">
                                    <a:s>Now()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="330">
                                    <a:s>LookBack</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="335">
                                 <a:s>Now()</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="337">
                        <a:s>where </a:s>
                        <a:s r="337">
                           <a:s r="338">
                              <a:s r="339">
                                 <a:s r="346">
                                    <a:s r="344">
                                       <a:s r="340">
                                          <a:s>(</a:s>
                                          <a:s r="340">
                                             <a:s r="342">
                                                <a:s r="341">
                                                   <a:s>O</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="342">
                                                   <a:s>effective</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s> as </a:s>
                                             <a:s r="343">
                                                <a:s>FHIR.dateTime</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="344">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> in </a:s>
                                    <a:s r="345">
                                       <a:s>LookBackInterval</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>
      or </a:s>
                                 <a:s r="356">
                                    <a:s r="354">
                                       <a:s r="350">
                                          <a:s>(</a:s>
                                          <a:s r="350">
                                             <a:s r="352">
                                                <a:s r="351">
                                                   <a:s>O</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="352">
                                                   <a:s>effective</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s> as </a:s>
                                             <a:s r="353">
                                                <a:s>FHIR.instant</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="354">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> in </a:s>
                                    <a:s r="355">
                                       <a:s>LookBackInterval</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
      or </a:s>
                              <a:s r="366">
                                 <a:s r="364">
                                    <a:s>PeriodToInterval(</a:s>
                                    <a:s r="360">
                                       <a:s r="362">
                                          <a:s r="361">
                                             <a:s>O</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="362">
                                             <a:s>effective</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> as </a:s>
                                       <a:s r="363">
                                          <a:s>FHIR.Period</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s r="366"> overlaps </a:s>
                                 <a:s r="365">
                                    <a:s>LookBackInterval</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      or </a:s>
                           <a:s r="371">
                              <a:s r="369">
                                 <a:s r="368">
                                    <a:s r="367">
                                       <a:s>O</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="368">
                                       <a:s>issued</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="369">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> in </a:s>
                              <a:s r="370">
                                 <a:s>LookBackInterval</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="375" locator="96:3-101:43" xsi:type="Query">
            <source localId="323" locator="96:3-96:11" alias="O">
               <expression localId="324" locator="96:3-96:9" name="ObsList" xsi:type="OperandRef"/>
            </source>
            <let localId="325" locator="97:9-97:59" identifier="LookBackInterval">
               <expression localId="336" locator="97:27-97:59" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="326" locator="97:36-97:51" xsi:type="Subtract">
                     <signature localId="331" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="332" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="329" locator="97:36-97:40" xsi:type="Now"/>
                     <operand localId="330" locator="97:44-97:51" name="LookBack" xsi:type="OperandRef"/>
                  </low>
                  <high localId="335" locator="97:54-97:58" xsi:type="Now"/>
               </expression>
            </let>
            <where localId="337" locator="98:5-101:43" xsi:type="Or">
               <operand localId="338" locator="98:11-100:79" xsi:type="Or">
                  <operand localId="339" locator="98:11-99:64" xsi:type="Or">
                     <operand localId="346" locator="98:11-98:66" xsi:type="In">
                        <signature localId="347" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        <signature localId="348" xsi:type="IntervalTypeSpecifier">
                           <pointType localId="349" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        </signature>
                        <operand localId="344" locator="98:11-98:46" path="value" xsi:type="Property">
                           <source localId="340" locator="98:11-98:40" strict="false" xsi:type="As">
                              <operand localId="342" locator="98:12-98:22" path="effective" scope="O" xsi:type="Property"/>
                              <asTypeSpecifier localId="343" locator="98:27-98:39" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                           </source>
                        </operand>
                        <operand localId="345" locator="98:51-98:66" name="LookBackInterval" xsi:type="QueryLetRef"/>
                     </operand>
                     <operand localId="356" locator="99:10-99:64" xsi:type="In">
                        <signature localId="357" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        <signature localId="358" xsi:type="IntervalTypeSpecifier">
                           <pointType localId="359" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        </signature>
                        <operand localId="354" locator="99:10-99:44" path="value" xsi:type="Property">
                           <source localId="350" locator="99:10-99:38" strict="false" xsi:type="As">
                              <operand localId="352" locator="99:11-99:21" path="effective" scope="O" xsi:type="Property"/>
                              <asTypeSpecifier localId="353" locator="99:26-99:37" name="fhir:instant" xsi:type="NamedTypeSpecifier"/>
                           </source>
                        </operand>
                        <operand localId="355" locator="99:49-99:64" name="LookBackInterval" xsi:type="QueryLetRef"/>
                     </operand>
                  </operand>
                  <operand localId="366" locator="100:10-100:79" xsi:type="Overlaps">
                     <operand localId="364" locator="100:10-100:53" name="PeriodToInterval" xsi:type="FunctionRef">
                        <operand localId="360" locator="100:27-100:52" strict="false" xsi:type="As">
                           <operand localId="362" locator="100:27-100:37" path="effective" scope="O" xsi:type="Property"/>
                           <asTypeSpecifier localId="363" locator="100:42-100:52" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                        </operand>
                     </operand>
                     <operand localId="365" locator="100:64-100:79" name="LookBackInterval" xsi:type="QueryLetRef"/>
                  </operand>
               </operand>
               <operand localId="371" locator="101:10-101:43" xsi:type="In">
                  <signature localId="372" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="373" xsi:type="IntervalTypeSpecifier">
                     <pointType localId="374" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  </signature>
                  <operand localId="369" locator="101:10-101:23" path="value" xsi:type="Property">
                     <source localId="368" locator="101:10-101:17" path="issued" scope="O" xsi:type="Property"/>
                  </operand>
                  <operand localId="370" locator="101:28-101:43" name="LookBackInterval" xsi:type="QueryLetRef"/>
               </operand>
            </where>
         </expression>
         <operand localId="320" name="ObsList">
            <operandTypeSpecifier localId="318" locator="95:45-95:61" xsi:type="ListTypeSpecifier">
               <elementType localId="319" locator="95:50-95:60" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="322" name="LookBack">
            <operandTypeSpecifier localId="321" locator="95:73-95:87" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="376" locator="112:1-119:3" name="MostRecent" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="376">
               <a:s>/**
 * The most recent observation.  For each Observation, this algorithm will use the Coalesce function, which uses the
 * first non-null date value from these fields: effectiveDateTime, effectiveInstant, effectivePeriod.end,
 * effectivePeriod.start, issued. The found date will be used to compare Observations and determine the most recent
 * one.  NOTE: We can't use FindDate because it appears that the execution engine may have problems sorting by the
 * result of a function.
 * @param ObsList - a list of Observations
 * @returns {Observation} the most recent Observation from the list, or null if null was passed in
 */
define function MostRecent(ObsList List&lt;Observation>):
  </a:s>
               <a:s r="438">
                  <a:s r="438">
                     <a:s>Last(</a:s>
                     <a:s r="435">
                        <a:s>
                           <a:s r="380">
                              <a:s r="381">
                                 <a:s>
                                    <a:s>ObsList</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> O</a:s>
                           </a:s>
                        </a:s>
                        <a:s> </a:s>
                        <a:s r="429">
                           <a:s>sort by </a:s>
                           <a:s r="428">
                              <a:s r="427">
                                 <a:s>Coalesce(
    </a:s>
                                 <a:s r="408">
                                    <a:s r="405">
                                       <a:s>(</a:s>
                                       <a:s r="405">
                                          <a:s r="406">
                                             <a:s>effective</a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="407">
                                             <a:s>FHIR.dateTime</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="408">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>,
    </a:s>
                                 <a:s r="412">
                                    <a:s r="409">
                                       <a:s>(</a:s>
                                       <a:s r="409">
                                          <a:s r="410">
                                             <a:s>effective</a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="411">
                                             <a:s>FHIR.instant</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="412">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>,
    </a:s>
                                 <a:s r="417">
                                    <a:s r="416">
                                       <a:s r="413">
                                          <a:s>(</a:s>
                                          <a:s r="413">
                                             <a:s r="414">
                                                <a:s>effective</a:s>
                                             </a:s>
                                             <a:s> as </a:s>
                                             <a:s r="415">
                                                <a:s>FHIR.Period</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="416">
                                          <a:s>&quot;end&quot;</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="417">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>,
    </a:s>
                                 <a:s r="422">
                                    <a:s r="421">
                                       <a:s r="418">
                                          <a:s>(</a:s>
                                          <a:s r="418">
                                             <a:s r="419">
                                                <a:s>effective</a:s>
                                             </a:s>
                                             <a:s> as </a:s>
                                             <a:s r="420">
                                                <a:s>FHIR.Period</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="421">
                                          <a:s>&quot;start&quot;</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="422">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>,
    </a:s>
                                 <a:s r="424">
                                    <a:s r="423">
                                       <a:s>issued</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="424">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="438" locator="113:3-119:3" xsi:type="Last">
            <source localId="435" locator="113:8-118:17" xsi:type="Query">
               <source localId="380" locator="113:8-113:16" alias="O">
                  <expression localId="381" locator="113:8-113:14" name="ObsList" xsi:type="OperandRef"/>
               </source>
               <sort localId="429" locator="113:18-118:17">
                  <by localId="428" locator="113:26-118:17" direction="asc" xsi:type="ByExpression">
                     <expression localId="427" locator="113:26-118:17" xsi:type="Coalesce">
                        <operand localId="408" locator="114:5-114:38" path="value" xsi:type="Property">
                           <source localId="405" locator="114:5-114:32" strict="false" xsi:type="As">
                              <operand localId="406" locator="114:6-114:14" name="effective" xsi:type="IdentifierRef"/>
                              <asTypeSpecifier localId="407" locator="114:19-114:31" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                           </source>
                        </operand>
                        <operand localId="412" locator="115:5-115:37" path="value" xsi:type="Property">
                           <source localId="409" locator="115:5-115:31" strict="false" xsi:type="As">
                              <operand localId="410" locator="115:6-115:14" name="effective" xsi:type="IdentifierRef"/>
                              <asTypeSpecifier localId="411" locator="115:19-115:30" name="fhir:instant" xsi:type="NamedTypeSpecifier"/>
                           </source>
                        </operand>
                        <operand localId="417" locator="116:5-116:42" path="value" xsi:type="Property">
                           <source localId="416" locator="116:5-116:36" path="end" xsi:type="Property">
                              <source localId="413" locator="116:5-116:30" strict="false" xsi:type="As">
                                 <operand localId="414" locator="116:6-116:14" name="effective" xsi:type="IdentifierRef"/>
                                 <asTypeSpecifier localId="415" locator="116:19-116:29" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                              </source>
                           </source>
                        </operand>
                        <operand localId="422" locator="117:5-117:44" path="value" xsi:type="Property">
                           <source localId="421" locator="117:5-117:38" path="start" xsi:type="Property">
                              <source localId="418" locator="117:5-117:30" strict="false" xsi:type="As">
                                 <operand localId="419" locator="117:6-117:14" name="effective" xsi:type="IdentifierRef"/>
                                 <asTypeSpecifier localId="420" locator="117:19-117:29" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                              </source>
                           </source>
                        </operand>
                        <operand localId="424" locator="118:5-118:16" path="value" xsi:type="Property">
                           <source localId="423" locator="118:5-118:10" name="issued" xsi:type="IdentifierRef"/>
                        </operand>
                     </expression>
                  </by>
               </sort>
            </source>
         </expression>
         <operand localId="379" name="ObsList">
            <operandTypeSpecifier localId="377" locator="112:36-112:52" xsi:type="ListTypeSpecifier">
               <elementType localId="378" locator="112:41-112:51" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="439" locator="126:1-127:52" name="QuantityValue" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="439">
               <a:s>/**
 * Extracts the quantity value from an Observation, returning it as a CQL Quantity
 * @param Obs - an observation
 * @returns {System.Quantity} the Observation's value as a quantity, or null if there is no quantity value
 */
define function QuantityValue(Obs Observation):
  </a:s>
               <a:s r="447">
                  <a:s r="447">
                     <a:s r="442">
                        <a:s>FHIRHelpers</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="447">
                        <a:s>ToQuantity(</a:s>
                        <a:s r="443">
                           <a:s r="445">
                              <a:s r="444">
                                 <a:s>Obs</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="445">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> as </a:s>
                           <a:s r="446">
                              <a:s>FHIR.Quantity</a:s>
                           </a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="447" locator="127:3-127:52" name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
            <operand localId="443" locator="127:26-127:51" strict="false" xsi:type="As">
               <operand localId="445" locator="127:26-127:34" path="value" xsi:type="Property">
                  <source localId="444" locator="127:26-127:28" name="Obs" xsi:type="OperandRef"/>
               </operand>
               <asTypeSpecifier localId="446" locator="127:39-127:51" name="fhir:Quantity" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
         <operand localId="441" name="Obs">
            <operandTypeSpecifier localId="440" locator="126:35-126:45" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="448" locator="134:1-135:58" name="ConceptValue" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="448">
               <a:s>/**
 * Extracts the CodeableConcept value from an Observation, returning it as a CQL Concept
 * @param Obs - an observation
 * @returns {System.Concept} the Observation's value as a concept, or null if there is no CodeabeConcept value
 */
define function ConceptValue(Obs Observation):
  </a:s>
               <a:s r="456">
                  <a:s r="456">
                     <a:s r="451">
                        <a:s>FHIRHelpers</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="456">
                        <a:s>ToConcept(</a:s>
                        <a:s r="452">
                           <a:s r="454">
                              <a:s r="453">
                                 <a:s>Obs</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="454">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> as </a:s>
                           <a:s r="455">
                              <a:s>FHIR.CodeableConcept</a:s>
                           </a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="456" locator="135:3-135:58" name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
            <operand localId="452" locator="135:25-135:57" strict="false" xsi:type="As">
               <operand localId="454" locator="135:25-135:33" path="value" xsi:type="Property">
                  <source localId="453" locator="135:25-135:27" name="Obs" xsi:type="OperandRef"/>
               </operand>
               <asTypeSpecifier localId="455" locator="135:38-135:57" name="fhir:CodeableConcept" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
         <operand localId="450" name="Obs">
            <operandTypeSpecifier localId="449" locator="134:34-134:44" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="457" locator="144:1-151:3" name="FindDate" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="457">
               <a:s>/**
 * Finds the first non-null meaningful date that can be associated with this Observation.  This will look through the
 * following fields in the following order: effectiveDateTime, effectiveInstant, effectivePeriod.end,
 * effectivePeriod.start, issued.
 * @param Obs - an Observation
 * @returns {System.DateTime} the first non-null meaningful date, or null if non is found
 */
define function FindDate(Obs Observation):
  </a:s>
               <a:s r="487">
                  <a:s r="487">
                     <a:s>Coalesce(
    </a:s>
                     <a:s r="464">
                        <a:s r="460">
                           <a:s>(</a:s>
                           <a:s r="460">
                              <a:s r="462">
                                 <a:s r="461">
                                    <a:s>Obs</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="462">
                                    <a:s>effective</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> as </a:s>
                              <a:s r="463">
                                 <a:s>FHIR.dateTime</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="464">
                           <a:s>value</a:s>
                        </a:s>
                     </a:s>
                     <a:s>,
    </a:s>
                     <a:s r="469">
                        <a:s r="465">
                           <a:s>(</a:s>
                           <a:s r="465">
                              <a:s r="467">
                                 <a:s r="466">
                                    <a:s>Obs</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="467">
                                    <a:s>effective</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> as </a:s>
                              <a:s r="468">
                                 <a:s>FHIR.instant</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="469">
                           <a:s>value</a:s>
                        </a:s>
                     </a:s>
                     <a:s>,
    </a:s>
                     <a:s r="475">
                        <a:s r="474">
                           <a:s r="470">
                              <a:s>(</a:s>
                              <a:s r="470">
                                 <a:s r="472">
                                    <a:s r="471">
                                       <a:s>Obs</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="472">
                                       <a:s>effective</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> as </a:s>
                                 <a:s r="473">
                                    <a:s>FHIR.Period</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="474">
                              <a:s>&quot;end&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="475">
                           <a:s>value</a:s>
                        </a:s>
                     </a:s>
                     <a:s>,
    </a:s>
                     <a:s r="481">
                        <a:s r="480">
                           <a:s r="476">
                              <a:s>(</a:s>
                              <a:s r="476">
                                 <a:s r="478">
                                    <a:s r="477">
                                       <a:s>Obs</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="478">
                                       <a:s>effective</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> as </a:s>
                                 <a:s r="479">
                                    <a:s>FHIR.Period</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="480">
                              <a:s>&quot;start&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="481">
                           <a:s>value</a:s>
                        </a:s>
                     </a:s>
                     <a:s>,
    </a:s>
                     <a:s r="484">
                        <a:s r="483">
                           <a:s r="482">
                              <a:s>Obs</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="483">
                              <a:s>issued</a:s>
                           </a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="484">
                           <a:s>value</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="487" locator="145:3-151:3" xsi:type="Coalesce">
            <operand localId="464" locator="146:5-146:42" path="value" xsi:type="Property">
               <source localId="460" locator="146:5-146:36" strict="false" xsi:type="As">
                  <operand localId="462" locator="146:6-146:18" path="effective" xsi:type="Property">
                     <source localId="461" locator="146:6-146:8" name="Obs" xsi:type="OperandRef"/>
                  </operand>
                  <asTypeSpecifier localId="463" locator="146:23-146:35" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
               </source>
            </operand>
            <operand localId="469" locator="147:5-147:41" path="value" xsi:type="Property">
               <source localId="465" locator="147:5-147:35" strict="false" xsi:type="As">
                  <operand localId="467" locator="147:6-147:18" path="effective" xsi:type="Property">
                     <source localId="466" locator="147:6-147:8" name="Obs" xsi:type="OperandRef"/>
                  </operand>
                  <asTypeSpecifier localId="468" locator="147:23-147:34" name="fhir:instant" xsi:type="NamedTypeSpecifier"/>
               </source>
            </operand>
            <operand localId="475" locator="148:5-148:46" path="value" xsi:type="Property">
               <source localId="474" locator="148:5-148:40" path="end" xsi:type="Property">
                  <source localId="470" locator="148:5-148:34" strict="false" xsi:type="As">
                     <operand localId="472" locator="148:6-148:18" path="effective" xsi:type="Property">
                        <source localId="471" locator="148:6-148:8" name="Obs" xsi:type="OperandRef"/>
                     </operand>
                     <asTypeSpecifier localId="473" locator="148:23-148:33" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                  </source>
               </source>
            </operand>
            <operand localId="481" locator="149:5-149:48" path="value" xsi:type="Property">
               <source localId="480" locator="149:5-149:42" path="start" xsi:type="Property">
                  <source localId="476" locator="149:5-149:34" strict="false" xsi:type="As">
                     <operand localId="478" locator="149:6-149:18" path="effective" xsi:type="Property">
                        <source localId="477" locator="149:6-149:8" name="Obs" xsi:type="OperandRef"/>
                     </operand>
                     <asTypeSpecifier localId="479" locator="149:23-149:33" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                  </source>
               </source>
            </operand>
            <operand localId="484" locator="150:5-150:20" path="value" xsi:type="Property">
               <source localId="483" locator="150:5-150:14" path="issued" xsi:type="Property">
                  <source localId="482" locator="150:5-150:7" name="Obs" xsi:type="OperandRef"/>
               </source>
            </operand>
         </expression>
         <operand localId="459" name="Obs">
            <operandTypeSpecifier localId="458" locator="144:30-144:40" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="488" locator="159:1-160:72" name="HighestObservation" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="488">
               <a:s>/**
 * The highest observation.
 * The value will be used to compare Observations and determine the highest one.
 * @param ObsList - a list of Observations
 * @returns {System.Quantity} the quantity with the highest value from the list, or null if null was passed in
 */
define function HighestObservation(ObsList List&lt;Observation>):
  </a:s>
               <a:s r="506">
                  <a:s r="506">
                     <a:s>Max(</a:s>
                     <a:s r="501">
                        <a:s>
                           <a:s r="492">
                              <a:s r="493">
                                 <a:s>
                                    <a:s>ObsList</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> O</a:s>
                           </a:s>
                        </a:s>
                        <a:s> </a:s>
                        <a:s r="494">
                           <a:s>return </a:s>
                           <a:s r="500">
                              <a:s r="495">
                                 <a:s>FHIRHelpers</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="500">
                                 <a:s>ToQuantity(</a:s>
                                 <a:s r="496">
                                    <a:s r="498">
                                       <a:s r="497">
                                          <a:s>O</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="498">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> as </a:s>
                                    <a:s r="499">
                                       <a:s>FHIR.Quantity</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="506" locator="160:3-160:72" xsi:type="Max">
            <signature localId="507" xsi:type="ListTypeSpecifier">
               <elementType localId="508" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
            </signature>
            <source localId="501" locator="160:7-160:71" xsi:type="Query">
               <source localId="492" locator="160:7-160:15" alias="O">
                  <expression localId="493" locator="160:7-160:13" name="ObsList" xsi:type="OperandRef"/>
               </source>
               <return localId="494" locator="160:17-160:71">
                  <expression localId="500" locator="160:24-160:71" name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand localId="496" locator="160:47-160:70" strict="false" xsi:type="As">
                        <operand localId="498" locator="160:47-160:53" path="value" scope="O" xsi:type="Property"/>
                        <asTypeSpecifier localId="499" locator="160:58-160:70" name="fhir:Quantity" xsi:type="NamedTypeSpecifier"/>
                     </operand>
                  </expression>
               </return>
            </source>
         </expression>
         <operand localId="491" name="ObsList">
            <operandTypeSpecifier localId="489" locator="159:44-159:60" xsi:type="ListTypeSpecifier">
               <elementType localId="490" locator="159:49-159:59" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="509" locator="171:1-172:63" name="Confirmed" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="509">
               <a:s>// -------------------------------------------------- CONDITIONS -------------------------------------------------------

/**
 * Conditions that are confirmed. In FHIR R4, this is reflected by verificationStatus: 'confirmed'.
 * @see http://hl7.org/fhir/R4/valueset-condition-ver-status.html
 * @param CondList - a list of Conditions
 * @returns {List&lt;Condition>} a list of confirmed Conditions, or null if null was passed in
 */
define function Confirmed(CondList List&lt;Condition>):
  </a:s>
               <a:s r="522">
                  <a:s r="522">
                     <a:s>
                        <a:s r="513">
                           <a:s r="514">
                              <a:s>
                                 <a:s>CondList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> C</a:s>
                        </a:s>
                     </a:s>
                     <a:s> </a:s>
                     <a:s r="515">
                        <a:s>where </a:s>
                        <a:s r="515">
                           <a:s r="517">
                              <a:s r="516">
                                 <a:s>C</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="517">
                                 <a:s>verificationStatus</a:s>
                              </a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="518">
                              <a:s>&quot;Condition Confirmed&quot;</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="522" locator="172:3-172:63" xsi:type="Query">
            <source localId="513" locator="172:3-172:12" alias="C">
               <expression localId="514" locator="172:3-172:10" name="CondList" xsi:type="OperandRef"/>
            </source>
            <where localId="515" locator="172:14-172:63" xsi:type="Equivalent">
               <signature localId="520" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
               <signature localId="521" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
               <operand localId="519" name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand localId="517" locator="172:20-172:39" path="verificationStatus" scope="C" xsi:type="Property"/>
               </operand>
               <operand localId="518" locator="172:43-172:63" name="Condition Confirmed" xsi:type="ConceptRef"/>
            </where>
         </expression>
         <operand localId="512" name="CondList">
            <operandTypeSpecifier localId="510" locator="171:36-171:50" xsi:type="ListTypeSpecifier">
               <elementType localId="511" locator="171:41-171:49" name="fhir:Condition" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="523" locator="182:1-185:29" name="ActiveCondition" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="523">
               <a:s>/**
 * Conditions that are active. In FHIR R4, this is reflected by clinicalStatus: 'active' and the absence of any
 * abatement information (i.e., if it abated, it is no longer active).
 * TODO: Rename to Active once the execution engine supports overloaded functions.
 * @see http://hl7.org/fhir/R4/valueset-condition-clinical.html
 * @param CondList - a list of Conditions
 * @returns {List&lt;Condition>} a list of active Conditions, or null if null was passed in
 */
define function ActiveCondition(CondList List&lt;Condition>):
  </a:s>
               <a:s r="540">
                  <a:s r="540">
                     <a:s>
                        <a:s r="527">
                           <a:s r="528">
                              <a:s>
                                 <a:s>CondList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> C</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="529">
                        <a:s>where </a:s>
                        <a:s r="529">
                           <a:s r="530">
                              <a:s r="532">
                                 <a:s r="531">
                                    <a:s>C</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="532">
                                    <a:s>clinicalStatus</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> ~ </a:s>
                              <a:s r="533">
                                 <a:s>&quot;Condition Active&quot;</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      and </a:s>
                           <a:s r="539">
                              <a:s r="538">
                                 <a:s r="537">
                                    <a:s>C</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="538">
                                    <a:s>abatement</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> is null</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="540" locator="183:3-185:29" xsi:type="Query">
            <source localId="527" locator="183:3-183:12" alias="C">
               <expression localId="528" locator="183:3-183:10" name="CondList" xsi:type="OperandRef"/>
            </source>
            <where localId="529" locator="184:5-185:29" xsi:type="And">
               <operand localId="530" locator="184:11-184:47" xsi:type="Equivalent">
                  <signature localId="535" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="536" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="534" name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand localId="532" locator="184:11-184:26" path="clinicalStatus" scope="C" xsi:type="Property"/>
                  </operand>
                  <operand localId="533" locator="184:30-184:47" name="Condition Active" xsi:type="ConceptRef"/>
               </operand>
               <operand localId="539" locator="185:11-185:29" xsi:type="IsNull">
                  <operand localId="538" locator="185:11-185:21" path="abatement" scope="C" xsi:type="Property"/>
               </operand>
            </where>
         </expression>
         <operand localId="526" name="CondList">
            <operandTypeSpecifier localId="524" locator="182:42-182:56" xsi:type="ListTypeSpecifier">
               <elementType localId="525" locator="182:47-182:55" name="fhir:Condition" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="541" locator="195:1-199:47" name="ActiveOrRecurring" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="541">
               <a:s>/**
 * Conditions that are active or recurring. In FHIR R4, this is reflected by clinicalStatus: 'active', 'recurrence', or
 * 'relapse'.  We do not check for null abatement information because it may have dates from when the now recurring
 * condition initially went into remission.
 * @see http://hl7.org/fhir/R4/valueset-condition-clinical.html
 * @param CondList - a list of Conditions
 * @returns {List&lt;Condition>} a list of active or recurring Conditions, or null if null was passed in
 */
define function ActiveOrRecurring(CondList List&lt;Condition>):
  </a:s>
               <a:s r="570">
                  <a:s r="570">
                     <a:s>
                        <a:s r="545">
                           <a:s r="546">
                              <a:s>
                                 <a:s>CondList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> C</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="547">
                        <a:s>where </a:s>
                        <a:s r="547">
                           <a:s r="548">
                              <a:s r="549">
                                 <a:s r="551">
                                    <a:s r="550">
                                       <a:s>C</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="551">
                                       <a:s>clinicalStatus</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> ~ </a:s>
                                 <a:s r="552">
                                    <a:s>&quot;Condition Active&quot;</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
      or </a:s>
                              <a:s r="556">
                                 <a:s r="558">
                                    <a:s r="557">
                                       <a:s>C</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="558">
                                       <a:s>clinicalStatus</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> ~ </a:s>
                                 <a:s r="559">
                                    <a:s>&quot;Condition Recurrence&quot;</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      or </a:s>
                           <a:s r="563">
                              <a:s r="565">
                                 <a:s r="564">
                                    <a:s>C</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="565">
                                    <a:s>clinicalStatus</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> ~ </a:s>
                              <a:s r="566">
                                 <a:s>&quot;Condition Relapse&quot;</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="570" locator="196:3-199:47" xsi:type="Query">
            <source localId="545" locator="196:3-196:12" alias="C">
               <expression localId="546" locator="196:3-196:10" name="CondList" xsi:type="OperandRef"/>
            </source>
            <where localId="547" locator="197:5-199:47" xsi:type="Or">
               <operand localId="548" locator="197:11-198:50" xsi:type="Or">
                  <operand localId="549" locator="197:11-197:47" xsi:type="Equivalent">
                     <signature localId="554" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="555" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="553" name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand localId="551" locator="197:11-197:26" path="clinicalStatus" scope="C" xsi:type="Property"/>
                     </operand>
                     <operand localId="552" locator="197:30-197:47" name="Condition Active" xsi:type="ConceptRef"/>
                  </operand>
                  <operand localId="556" locator="198:10-198:50" xsi:type="Equivalent">
                     <signature localId="561" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="562" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="560" name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand localId="558" locator="198:10-198:25" path="clinicalStatus" scope="C" xsi:type="Property"/>
                     </operand>
                     <operand localId="559" locator="198:29-198:50" name="Condition Recurrence" xsi:type="ConceptRef"/>
                  </operand>
               </operand>
               <operand localId="563" locator="199:10-199:47" xsi:type="Equivalent">
                  <signature localId="568" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="569" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="567" name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand localId="565" locator="199:10-199:25" path="clinicalStatus" scope="C" xsi:type="Property"/>
                  </operand>
                  <operand localId="566" locator="199:29-199:47" name="Condition Relapse" xsi:type="ConceptRef"/>
               </operand>
            </where>
         </expression>
         <operand localId="544" name="CondList">
            <operandTypeSpecifier localId="542" locator="195:44-195:58" xsi:type="ListTypeSpecifier">
               <elementType localId="543" locator="195:49-195:57" name="fhir:Condition" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="571" locator="209:1-214:49" name="ConditionLookBack" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="571">
               <a:s>/**
 * Conditions with an onset or recorded date in the specified &quot;look back&quot; period.  For example, pregnancy in
 * the last 42 weeks.
 * TODO: Rename to LookBack once the execution engine supports overloaded functions.
 * @param CondList - a list of Conditions
 * @returns {List&lt;Condition>} a list of Conditions with onset or recorded date specified lookback period, or null
 * if null was passed in
 */
define function ConditionLookBack(CondList List&lt;Condition>, LookBack System.Quantity):
  </a:s>
               <a:s r="618">
                  <a:s r="618">
                     <a:s>
                        <a:s r="577">
                           <a:s r="578">
                              <a:s>
                                 <a:s>CondList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> C</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="579">
                           <a:s>LookBackInterval: </a:s>
                           <a:s r="590">
                              <a:s>Interval[</a:s>
                              <a:s r="580">
                                 <a:s r="583">
                                    <a:s>Now()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="584">
                                    <a:s>LookBack</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="589">
                                 <a:s>Now()</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="591">
                        <a:s>where </a:s>
                        <a:s r="591">
                           <a:s r="592">
                              <a:s r="599">
                                 <a:s r="597">
                                    <a:s r="593">
                                       <a:s>(</a:s>
                                       <a:s r="593">
                                          <a:s r="595">
                                             <a:s r="594">
                                                <a:s>C</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="595">
                                                <a:s>onset</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="596">
                                             <a:s>FHIR.dateTime</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="597">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> in </a:s>
                                 <a:s r="598">
                                    <a:s>LookBackInterval</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
      or </a:s>
                              <a:s r="609">
                                 <a:s r="607">
                                    <a:s>PeriodToInterval(</a:s>
                                    <a:s r="603">
                                       <a:s r="605">
                                          <a:s r="604">
                                             <a:s>C</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="605">
                                             <a:s>onset</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> as </a:s>
                                       <a:s r="606">
                                          <a:s>FHIR.Period</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s r="609"> overlaps </a:s>
                                 <a:s r="608">
                                    <a:s>LookBackInterval</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      or </a:s>
                           <a:s r="614">
                              <a:s r="612">
                                 <a:s r="611">
                                    <a:s r="610">
                                       <a:s>C</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="611">
                                       <a:s>recordedDate</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="612">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> in </a:s>
                              <a:s r="613">
                                 <a:s>LookBackInterval</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="618" locator="210:3-214:49" xsi:type="Query">
            <source localId="577" locator="210:3-210:12" alias="C">
               <expression localId="578" locator="210:3-210:10" name="CondList" xsi:type="OperandRef"/>
            </source>
            <let localId="579" locator="211:9-211:59" identifier="LookBackInterval">
               <expression localId="590" locator="211:27-211:59" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="580" locator="211:36-211:51" xsi:type="Subtract">
                     <signature localId="585" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="586" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="583" locator="211:36-211:40" xsi:type="Now"/>
                     <operand localId="584" locator="211:44-211:51" name="LookBack" xsi:type="OperandRef"/>
                  </low>
                  <high localId="589" locator="211:54-211:58" xsi:type="Now"/>
               </expression>
            </let>
            <where localId="591" locator="212:5-214:49" xsi:type="Or">
               <operand localId="592" locator="212:11-213:75" xsi:type="Or">
                  <operand localId="599" locator="212:11-212:62" xsi:type="In">
                     <signature localId="600" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="601" xsi:type="IntervalTypeSpecifier">
                        <pointType localId="602" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     </signature>
                     <operand localId="597" locator="212:11-212:42" path="value" xsi:type="Property">
                        <source localId="593" locator="212:11-212:36" strict="false" xsi:type="As">
                           <operand localId="595" locator="212:12-212:18" path="onset" scope="C" xsi:type="Property"/>
                           <asTypeSpecifier localId="596" locator="212:23-212:35" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                        </source>
                     </operand>
                     <operand localId="598" locator="212:47-212:62" name="LookBackInterval" xsi:type="QueryLetRef"/>
                  </operand>
                  <operand localId="609" locator="213:10-213:75" xsi:type="Overlaps">
                     <operand localId="607" locator="213:10-213:49" name="PeriodToInterval" xsi:type="FunctionRef">
                        <operand localId="603" locator="213:27-213:48" strict="false" xsi:type="As">
                           <operand localId="605" locator="213:27-213:33" path="onset" scope="C" xsi:type="Property"/>
                           <asTypeSpecifier localId="606" locator="213:38-213:48" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                        </operand>
                     </operand>
                     <operand localId="608" locator="213:60-213:75" name="LookBackInterval" xsi:type="QueryLetRef"/>
                  </operand>
               </operand>
               <operand localId="614" locator="214:10-214:49" xsi:type="In">
                  <signature localId="615" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="616" xsi:type="IntervalTypeSpecifier">
                     <pointType localId="617" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  </signature>
                  <operand localId="612" locator="214:10-214:29" path="value" xsi:type="Property">
                     <source localId="611" locator="214:10-214:23" path="recordedDate" scope="C" xsi:type="Property"/>
                  </operand>
                  <operand localId="613" locator="214:34-214:49" name="LookBackInterval" xsi:type="QueryLetRef"/>
               </operand>
            </where>
         </expression>
         <operand localId="574" name="CondList">
            <operandTypeSpecifier localId="572" locator="209:44-209:58" xsi:type="ListTypeSpecifier">
               <elementType localId="573" locator="209:49-209:57" name="fhir:Condition" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="576" name="LookBack">
            <operandTypeSpecifier localId="575" locator="209:70-209:84" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="619" locator="223:1-229:3" name="MostRecentCondition" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="619">
               <a:s>/**
 * The most recent condition.  For each Condition, this algorithm will use the Coalesce function, which uses the
 * first non-null result from these fields: onsetDateTime, onsetPeriod.end, onsetPeriod.start, assertedDate.
 * The found date will be used to compare Conditions and determine the most recent one.
 * @param CondList - a list of Conditions
 * @returns {Condition} the most recent Condition from the list, or null if null was passed in
 */
define function MostRecentCondition(CondList List&lt;Condition>):
  </a:s>
               <a:s r="675">
                  <a:s r="675">
                     <a:s>Last(</a:s>
                     <a:s r="670">
                        <a:s>
                           <a:s r="623">
                              <a:s r="624">
                                 <a:s>
                                    <a:s>CondList</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> C</a:s>
                           </a:s>
                        </a:s>
                        <a:s> </a:s>
                        <a:s r="664">
                           <a:s>sort by </a:s>
                           <a:s r="663">
                              <a:s r="662">
                                 <a:s>Coalesce(
    </a:s>
                                 <a:s r="647">
                                    <a:s r="644">
                                       <a:s>(</a:s>
                                       <a:s r="644">
                                          <a:s r="645">
                                             <a:s>onset</a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="646">
                                             <a:s>FHIR.dateTime</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="647">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>,
    </a:s>
                                 <a:s r="652">
                                    <a:s r="651">
                                       <a:s r="648">
                                          <a:s>(</a:s>
                                          <a:s r="648">
                                             <a:s r="649">
                                                <a:s>onset</a:s>
                                             </a:s>
                                             <a:s> as </a:s>
                                             <a:s r="650">
                                                <a:s>FHIR.Period</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="651">
                                          <a:s>&quot;end&quot;</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="652">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>,
    </a:s>
                                 <a:s r="657">
                                    <a:s r="656">
                                       <a:s r="653">
                                          <a:s>(</a:s>
                                          <a:s r="653">
                                             <a:s r="654">
                                                <a:s>onset</a:s>
                                             </a:s>
                                             <a:s> as </a:s>
                                             <a:s r="655">
                                                <a:s>FHIR.Period</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="656">
                                          <a:s>&quot;start&quot;</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="657">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>,
    </a:s>
                                 <a:s r="659">
                                    <a:s r="658">
                                       <a:s>recordedDate</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="659">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="675" locator="224:3-229:3" xsi:type="Last">
            <signature localId="676" xsi:type="ListTypeSpecifier">
               <elementType localId="677" name="fhir:Condition" xsi:type="NamedTypeSpecifier"/>
            </signature>
            <source localId="670" locator="224:8-228:23" xsi:type="Query">
               <source localId="623" locator="224:8-224:17" alias="C">
                  <expression localId="624" locator="224:8-224:15" name="CondList" xsi:type="OperandRef"/>
               </source>
               <sort localId="664" locator="224:19-228:23">
                  <by localId="663" locator="224:27-228:23" direction="asc" xsi:type="ByExpression">
                     <expression localId="662" locator="224:27-228:23" xsi:type="Coalesce">
                        <operand localId="647" locator="225:5-225:34" path="value" xsi:type="Property">
                           <source localId="644" locator="225:5-225:28" strict="false" xsi:type="As">
                              <operand localId="645" locator="225:6-225:10" name="onset" xsi:type="IdentifierRef"/>
                              <asTypeSpecifier localId="646" locator="225:15-225:27" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                           </source>
                        </operand>
                        <operand localId="652" locator="226:5-226:38" path="value" xsi:type="Property">
                           <source localId="651" locator="226:5-226:32" path="end" xsi:type="Property">
                              <source localId="648" locator="226:5-226:26" strict="false" xsi:type="As">
                                 <operand localId="649" locator="226:6-226:10" name="onset" xsi:type="IdentifierRef"/>
                                 <asTypeSpecifier localId="650" locator="226:15-226:25" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                              </source>
                           </source>
                        </operand>
                        <operand localId="657" locator="227:5-227:40" path="value" xsi:type="Property">
                           <source localId="656" locator="227:5-227:34" path="start" xsi:type="Property">
                              <source localId="653" locator="227:5-227:26" strict="false" xsi:type="As">
                                 <operand localId="654" locator="227:6-227:10" name="onset" xsi:type="IdentifierRef"/>
                                 <asTypeSpecifier localId="655" locator="227:15-227:25" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                              </source>
                           </source>
                        </operand>
                        <operand localId="659" locator="228:5-228:22" path="value" xsi:type="Property">
                           <source localId="658" locator="228:5-228:16" name="recordedDate" xsi:type="IdentifierRef"/>
                        </operand>
                     </expression>
                  </by>
               </sort>
            </source>
         </expression>
         <operand localId="622" name="CondList">
            <operandTypeSpecifier localId="620" locator="223:46-223:60" xsi:type="ListTypeSpecifier">
               <elementType localId="621" locator="223:51-223:59" name="fhir:Condition" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="678" locator="239:1-241:38" name="Completed" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="678">
               <a:s>// -------------------------------------------------- PROCEDURES ------------------------------------------------------

/**
 * Procedures that are completed. In FHIR R4, this is reflected by status: 'completed'.
 * @see http://hl7.org/fhir/R4/valueset-event-status.html
 * @param ProcList - a list of Procedures
 * @returns {List&lt;Procedure>} a list of completed Procedures, or null if null was passed in
 */
define function Completed(ProcList List&lt;Procedure>):
  </a:s>
               <a:s r="691">
                  <a:s r="691">
                     <a:s>
                        <a:s r="682">
                           <a:s r="683">
                              <a:s>
                                 <a:s>ProcList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> P</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="684">
                        <a:s>where </a:s>
                        <a:s r="684">
                           <a:s r="687">
                              <a:s r="686">
                                 <a:s r="685">
                                    <a:s>P</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="686">
                                    <a:s>status</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="687">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> = </a:s>
                           <a:s r="688">
                              <a:s>'completed'</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="691" locator="240:3-241:38" xsi:type="Query">
            <source localId="682" locator="240:3-240:12" alias="P">
               <expression localId="683" locator="240:3-240:10" name="ProcList" xsi:type="OperandRef"/>
            </source>
            <where localId="684" locator="241:5-241:38" xsi:type="Equal">
               <signature localId="689" name="t:String" xsi:type="NamedTypeSpecifier"/>
               <signature localId="690" name="t:String" xsi:type="NamedTypeSpecifier"/>
               <operand localId="687" locator="241:11-241:24" path="value" xsi:type="Property">
                  <source localId="686" locator="241:11-241:18" path="status" scope="P" xsi:type="Property"/>
               </operand>
               <operand localId="688" locator="241:28-241:38" valueType="t:String" value="completed" xsi:type="Literal"/>
            </where>
         </expression>
         <operand localId="681" name="ProcList">
            <operandTypeSpecifier localId="679" locator="239:36-239:50" xsi:type="ListTypeSpecifier">
               <elementType localId="680" locator="239:41-239:49" name="fhir:Procedure" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="692" locator="249:1-251:40" name="ProcedureInProgress" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="692">
               <a:s>/**
 * Procedures that are in progress. In FHIR R4, this is reflected by status: 'in-progress'.
 * @see http://hl7.org/fhir/R4/valueset-event-status.html
 * @param ProcList - a list of Procedures
 * @returns {List&lt;Procedure>} a list of completed Procedures, or null if null was passed in
 */
define function ProcedureInProgress(ProcList List&lt;Procedure>):
  </a:s>
               <a:s r="705">
                  <a:s r="705">
                     <a:s>
                        <a:s r="696">
                           <a:s r="697">
                              <a:s>
                                 <a:s>ProcList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> P</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="698">
                        <a:s>where </a:s>
                        <a:s r="698">
                           <a:s r="701">
                              <a:s r="700">
                                 <a:s r="699">
                                    <a:s>P</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="700">
                                    <a:s>status</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="701">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> = </a:s>
                           <a:s r="702">
                              <a:s>'in-progress'</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="705" locator="250:3-251:40" xsi:type="Query">
            <source localId="696" locator="250:3-250:12" alias="P">
               <expression localId="697" locator="250:3-250:10" name="ProcList" xsi:type="OperandRef"/>
            </source>
            <where localId="698" locator="251:5-251:40" xsi:type="Equal">
               <signature localId="703" name="t:String" xsi:type="NamedTypeSpecifier"/>
               <signature localId="704" name="t:String" xsi:type="NamedTypeSpecifier"/>
               <operand localId="701" locator="251:11-251:24" path="value" xsi:type="Property">
                  <source localId="700" locator="251:11-251:18" path="status" scope="P" xsi:type="Property"/>
               </operand>
               <operand localId="702" locator="251:28-251:40" valueType="t:String" value="in-progress" xsi:type="Literal"/>
            </where>
         </expression>
         <operand localId="695" name="ProcList">
            <operandTypeSpecifier localId="693" locator="249:46-249:60" xsi:type="ListTypeSpecifier">
               <elementType localId="694" locator="249:51-249:59" name="fhir:Procedure" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="706" locator="260:1-262:92" name="ProcedurePerformance" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="706">
               <a:s>/**
 * Procedures that actually happened or are happening. In FHIR R4, there are a few properties that negate the
 * procedure, most notably when status is 'preparation', 'not-done', 'entered-in-error', or 'unknown'.
 * @see http://hl7.org/fhir/R4/valueset-event-status.html
 * @param ProcList - a list of Procedures
 * @returns {List&lt;Procedure>} a list of Procedures that actually happened or are happening, or null if null was passed in
 */
define function ProcedurePerformance(ProcList List&lt;Procedure>):
  </a:s>
               <a:s r="725">
                  <a:s r="725">
                     <a:s>
                        <a:s r="710">
                           <a:s r="711">
                              <a:s>
                                 <a:s>ProcList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> P</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="712">
                        <a:s>where </a:s>
                        <a:s r="712">
                           <a:s>not </a:s>
                           <a:s r="721">
                              <a:s>(</a:s>
                              <a:s r="721">
                                 <a:s r="715">
                                    <a:s r="714">
                                       <a:s r="713">
                                          <a:s>P</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="714">
                                          <a:s>status</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="715">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> in </a:s>
                                 <a:s r="716">
                                    <a:s>{</a:s>
                                    <a:s r="717">
                                       <a:s>'preparation'</a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="718">
                                       <a:s>'not-done'</a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="719">
                                       <a:s>'entered-in-error'</a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="720">
                                       <a:s>'unknown'</a:s>
                                    </a:s>
                                    <a:s>}</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="725" locator="261:3-262:92" xsi:type="Query">
            <source localId="710" locator="261:3-261:12" alias="P">
               <expression localId="711" locator="261:3-261:10" name="ProcList" xsi:type="OperandRef"/>
            </source>
            <where localId="712" locator="262:5-262:92" xsi:type="Not">
               <operand localId="721" locator="262:15-262:92" xsi:type="In">
                  <signature localId="722" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="723" xsi:type="ListTypeSpecifier">
                     <elementType localId="724" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </signature>
                  <operand localId="715" locator="262:16-262:29" path="value" xsi:type="Property">
                     <source localId="714" locator="262:16-262:23" path="status" scope="P" xsi:type="Property"/>
                  </operand>
                  <operand localId="716" locator="262:34-262:91" xsi:type="List">
                     <element localId="717" locator="262:35-262:47" valueType="t:String" value="preparation" xsi:type="Literal"/>
                     <element localId="718" locator="262:50-262:59" valueType="t:String" value="not-done" xsi:type="Literal"/>
                     <element localId="719" locator="262:62-262:79" valueType="t:String" value="entered-in-error" xsi:type="Literal"/>
                     <element localId="720" locator="262:82-262:90" valueType="t:String" value="unknown" xsi:type="Literal"/>
                  </operand>
               </operand>
            </where>
         </expression>
         <operand localId="709" name="ProcList">
            <operandTypeSpecifier localId="707" locator="260:47-260:61" xsi:type="ListTypeSpecifier">
               <elementType localId="708" locator="260:52-260:60" name="fhir:Procedure" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="726" locator="273:1-277:79" name="ProcedureLookBack" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="726">
               <a:s>/**
 * Procedures performed in the specified &quot;look back&quot; period.  For example, PCIs performed in the
 * past 2 weeks.
 * TODO: Rename to LookBack once the execution engine supports overloaded functions.
 * @param ProcList - a list of Procedures
 * @param LookBack - the lookback period for when the procedure was performed
 * @returns {List&lt;Procedure>} a list of Procedures performed in the look back period, or null if null
 * was passed in
 */
define function ProcedureLookBack(ProcList List&lt;Procedure>, LookBack System.Quantity):
  </a:s>
               <a:s r="764">
                  <a:s r="764">
                     <a:s>
                        <a:s r="732">
                           <a:s r="733">
                              <a:s>
                                 <a:s>ProcList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> P</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="734">
                           <a:s>LookBackInterval: </a:s>
                           <a:s r="745">
                              <a:s>Interval[</a:s>
                              <a:s r="735">
                                 <a:s r="738">
                                    <a:s>Now()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="739">
                                    <a:s>LookBack</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="744">
                                 <a:s>Now()</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="746">
                        <a:s>where </a:s>
                        <a:s r="746">
                           <a:s r="753">
                              <a:s r="751">
                                 <a:s r="747">
                                    <a:s>(</a:s>
                                    <a:s r="747">
                                       <a:s r="749">
                                          <a:s r="748">
                                             <a:s>P</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="749">
                                             <a:s>performed</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> as </a:s>
                                       <a:s r="750">
                                          <a:s>FHIR.dateTime</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="751">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> in </a:s>
                              <a:s r="752">
                                 <a:s>LookBackInterval</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      or </a:s>
                           <a:s r="763">
                              <a:s r="761">
                                 <a:s>PeriodToInterval(</a:s>
                                 <a:s r="757">
                                    <a:s r="759">
                                       <a:s r="758">
                                          <a:s>P</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="759">
                                          <a:s>performed</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> as </a:s>
                                    <a:s r="760">
                                       <a:s>FHIR.Period</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="763"> overlaps </a:s>
                              <a:s r="762">
                                 <a:s>LookBackInterval</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="764" locator="274:3-277:79" xsi:type="Query">
            <source localId="732" locator="274:3-274:12" alias="P">
               <expression localId="733" locator="274:3-274:10" name="ProcList" xsi:type="OperandRef"/>
            </source>
            <let localId="734" locator="275:9-275:59" identifier="LookBackInterval">
               <expression localId="745" locator="275:27-275:59" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="735" locator="275:36-275:51" xsi:type="Subtract">
                     <signature localId="740" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="741" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="738" locator="275:36-275:40" xsi:type="Now"/>
                     <operand localId="739" locator="275:44-275:51" name="LookBack" xsi:type="OperandRef"/>
                  </low>
                  <high localId="744" locator="275:54-275:58" xsi:type="Now"/>
               </expression>
            </let>
            <where localId="746" locator="276:5-277:79" xsi:type="Or">
               <operand localId="753" locator="276:11-276:66" xsi:type="In">
                  <signature localId="754" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="755" xsi:type="IntervalTypeSpecifier">
                     <pointType localId="756" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  </signature>
                  <operand localId="751" locator="276:11-276:46" path="value" xsi:type="Property">
                     <source localId="747" locator="276:11-276:40" strict="false" xsi:type="As">
                        <operand localId="749" locator="276:12-276:22" path="performed" scope="P" xsi:type="Property"/>
                        <asTypeSpecifier localId="750" locator="276:27-276:39" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                     </source>
                  </operand>
                  <operand localId="752" locator="276:51-276:66" name="LookBackInterval" xsi:type="QueryLetRef"/>
               </operand>
               <operand localId="763" locator="277:10-277:79" xsi:type="Overlaps">
                  <operand localId="761" locator="277:10-277:53" name="PeriodToInterval" xsi:type="FunctionRef">
                     <operand localId="757" locator="277:27-277:52" strict="false" xsi:type="As">
                        <operand localId="759" locator="277:27-277:37" path="performed" scope="P" xsi:type="Property"/>
                        <asTypeSpecifier localId="760" locator="277:42-277:52" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                     </operand>
                  </operand>
                  <operand localId="762" locator="277:64-277:79" name="LookBackInterval" xsi:type="QueryLetRef"/>
               </operand>
            </where>
         </expression>
         <operand localId="729" name="ProcList">
            <operandTypeSpecifier localId="727" locator="273:44-273:58" xsi:type="ListTypeSpecifier">
               <elementType localId="728" locator="273:49-273:57" name="fhir:Procedure" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="731" name="LookBack">
            <operandTypeSpecifier localId="730" locator="273:70-273:84" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="765" locator="286:1-291:3" name="MostRecentProcedure" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="765">
               <a:s>/**
 * The most recent procedure.  For each Procedure, this algorithm will use the Coalesce function, which returns the
 * first non-null result from these fields: performedDateTime, performedPeriod.end, performedPeriod.start.
 * The found date will be used to compare Procedures and determine the most recent one.
 * @param ProcList - a list of Procedures
 * @returns {Procedure} the most recent Procedure from the list, or null if null was passed in
 */
define function MostRecentProcedure(ProcList List&lt;Procedure>):
  </a:s>
               <a:s r="817">
                  <a:s r="817">
                     <a:s>Last(</a:s>
                     <a:s r="812">
                        <a:s>
                           <a:s r="769">
                              <a:s r="770">
                                 <a:s>
                                    <a:s>ProcList</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> P</a:s>
                           </a:s>
                        </a:s>
                        <a:s> </a:s>
                        <a:s r="806">
                           <a:s>sort by </a:s>
                           <a:s r="805">
                              <a:s r="804">
                                 <a:s>Coalesce(
    </a:s>
                                 <a:s r="791">
                                    <a:s r="788">
                                       <a:s>(</a:s>
                                       <a:s r="788">
                                          <a:s r="789">
                                             <a:s>performed</a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="790">
                                             <a:s>FHIR.dateTime</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="791">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>,
    </a:s>
                                 <a:s r="796">
                                    <a:s r="795">
                                       <a:s r="792">
                                          <a:s>(</a:s>
                                          <a:s r="792">
                                             <a:s r="793">
                                                <a:s>performed</a:s>
                                             </a:s>
                                             <a:s> as </a:s>
                                             <a:s r="794">
                                                <a:s>FHIR.Period</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="795">
                                          <a:s>&quot;end&quot;</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="796">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>,
    </a:s>
                                 <a:s r="801">
                                    <a:s r="800">
                                       <a:s r="797">
                                          <a:s>(</a:s>
                                          <a:s r="797">
                                             <a:s r="798">
                                                <a:s>performed</a:s>
                                             </a:s>
                                             <a:s> as </a:s>
                                             <a:s r="799">
                                                <a:s>FHIR.Period</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="800">
                                          <a:s>&quot;start&quot;</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="801">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="817" locator="287:3-291:3" xsi:type="Last">
            <signature localId="818" xsi:type="ListTypeSpecifier">
               <elementType localId="819" name="fhir:Procedure" xsi:type="NamedTypeSpecifier"/>
            </signature>
            <source localId="812" locator="287:8-290:45" xsi:type="Query">
               <source localId="769" locator="287:8-287:17" alias="P">
                  <expression localId="770" locator="287:8-287:15" name="ProcList" xsi:type="OperandRef"/>
               </source>
               <sort localId="806" locator="287:19-290:45">
                  <by localId="805" locator="287:27-290:45" direction="asc" xsi:type="ByExpression">
                     <expression localId="804" locator="287:27-290:45" xsi:type="Coalesce">
                        <operand localId="791" locator="288:5-288:38" path="value" xsi:type="Property">
                           <source localId="788" locator="288:5-288:32" strict="false" xsi:type="As">
                              <operand localId="789" locator="288:6-288:14" name="performed" xsi:type="IdentifierRef"/>
                              <asTypeSpecifier localId="790" locator="288:19-288:31" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                           </source>
                        </operand>
                        <operand localId="796" locator="289:5-289:42" path="value" xsi:type="Property">
                           <source localId="795" locator="289:5-289:36" path="end" xsi:type="Property">
                              <source localId="792" locator="289:5-289:30" strict="false" xsi:type="As">
                                 <operand localId="793" locator="289:6-289:14" name="performed" xsi:type="IdentifierRef"/>
                                 <asTypeSpecifier localId="794" locator="289:19-289:29" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                              </source>
                           </source>
                        </operand>
                        <operand localId="801" locator="290:5-290:44" path="value" xsi:type="Property">
                           <source localId="800" locator="290:5-290:38" path="start" xsi:type="Property">
                              <source localId="797" locator="290:5-290:30" strict="false" xsi:type="As">
                                 <operand localId="798" locator="290:6-290:14" name="performed" xsi:type="IdentifierRef"/>
                                 <asTypeSpecifier localId="799" locator="290:19-290:29" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                              </source>
                           </source>
                        </operand>
                     </expression>
                  </by>
               </sort>
            </source>
         </expression>
         <operand localId="768" name="ProcList">
            <operandTypeSpecifier localId="766" locator="286:46-286:60" xsi:type="ListTypeSpecifier">
               <elementType localId="767" locator="286:51-286:59" name="fhir:Procedure" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="820" locator="305:1-307:55" name="ServiceRequestActiveOrCompleted" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="820">
               <a:s>// ----------------------------------------------- SERVICEREQUESTS -----------------------------------------------------

// NOTE: In FHIR R4, ProcedureRequest and ReferralRequest are replaced by ServiceRequest

/**
 * ServiceRequests that are active or completed. In FHIR R4, this is reflected by the corresponding
 * status values.
 * @see http://hl7.org/fhir/R4/valueset-request-status.html
 * @param ServiceRequestList - a list of ServiceRequests
 * @returns {List&lt;ServiceRequest>} a list of accepted, in-progress, or completed ProcedureRequests,
 * or null if null was passed in
 */
define function ServiceRequestActiveOrCompleted(ServiceRequestList List&lt;ServiceRequest>):
  </a:s>
               <a:s r="836">
                  <a:s r="836">
                     <a:s>
                        <a:s r="824">
                           <a:s r="825">
                              <a:s>
                                 <a:s>ServiceRequestList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> S</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="832">
                        <a:s>where </a:s>
                        <a:s r="832">
                           <a:s r="828">
                              <a:s r="827">
                                 <a:s r="826">
                                    <a:s>S</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="827">
                                    <a:s>status</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="828">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> in </a:s>
                           <a:s r="829">
                              <a:s>List{</a:s>
                              <a:s r="830">
                                 <a:s>'active'</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="831">
                                 <a:s>'completed'</a:s>
                              </a:s>
                              <a:s>}</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="836" locator="306:3-307:55" xsi:type="Query">
            <source localId="824" locator="306:3-306:22" alias="S">
               <expression localId="825" locator="306:3-306:20" name="ServiceRequestList" xsi:type="OperandRef"/>
            </source>
            <where localId="832" locator="307:5-307:55" xsi:type="In">
               <signature localId="833" name="t:String" xsi:type="NamedTypeSpecifier"/>
               <signature localId="834" xsi:type="ListTypeSpecifier">
                  <elementType localId="835" name="t:String" xsi:type="NamedTypeSpecifier"/>
               </signature>
               <operand localId="828" locator="307:11-307:24" path="value" xsi:type="Property">
                  <source localId="827" locator="307:11-307:18" path="status" scope="S" xsi:type="Property"/>
               </operand>
               <operand localId="829" locator="307:29-307:55" xsi:type="List">
                  <element localId="830" locator="307:34-307:41" valueType="t:String" value="active" xsi:type="Literal"/>
                  <element localId="831" locator="307:44-307:54" valueType="t:String" value="completed" xsi:type="Literal"/>
               </operand>
            </where>
         </expression>
         <operand localId="823" name="ServiceRequestList">
            <operandTypeSpecifier localId="821" locator="305:68-305:87" xsi:type="ListTypeSpecifier">
               <elementType localId="822" locator="305:73-305:86" name="fhir:ServiceRequest" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="837" locator="318:1-320:65" name="ServiceRequestLookBack" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="837">
               <a:s>/**
 * ServiceRequests ordered in the specified &quot;look back&quot; period.  For example, PCIs ordered in the
 * past 2 weeks.
 * TODO: Rename to LookBack once the execution engine supports overloaded functions.
 * @param ServiceRequestList - a list of ServiceRequests
 * @param LookBack - the lookback period for when the service was ordered
 * @returns {List&lt;ServiceRequest>} a list of ServiceRequests ordered in the look back period, or null if null
 * was passed in
 */
define function ServiceRequestLookBack(ServiceRequestList List&lt;ServiceRequest>, LookBack System.Quantity):
  </a:s>
               <a:s r="863">
                  <a:s r="863">
                     <a:s>
                        <a:s r="843">
                           <a:s r="844">
                              <a:s>
                                 <a:s>ServiceRequestList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> S</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="859">
                        <a:s>where </a:s>
                        <a:s r="859">
                           <a:s r="847">
                              <a:s r="846">
                                 <a:s r="845">
                                    <a:s>S</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="846">
                                    <a:s>authoredOn</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="847">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> in </a:s>
                           <a:s r="858">
                              <a:s>Interval[</a:s>
                              <a:s r="848">
                                 <a:s r="851">
                                    <a:s>Now()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="852">
                                    <a:s>LookBack</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="857">
                                 <a:s>Now()</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="863" locator="319:3-320:65" xsi:type="Query">
            <source localId="843" locator="319:3-319:22" alias="S">
               <expression localId="844" locator="319:3-319:20" name="ServiceRequestList" xsi:type="OperandRef"/>
            </source>
            <where localId="859" locator="320:5-320:65" xsi:type="In">
               <signature localId="860" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               <signature localId="861" xsi:type="IntervalTypeSpecifier">
                  <pointType localId="862" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               </signature>
               <operand localId="847" locator="320:11-320:28" path="value" xsi:type="Property">
                  <source localId="846" locator="320:11-320:22" path="authoredOn" scope="S" xsi:type="Property"/>
               </operand>
               <operand localId="858" locator="320:33-320:65" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="848" locator="320:42-320:57" xsi:type="Subtract">
                     <signature localId="853" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="854" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="851" locator="320:42-320:46" xsi:type="Now"/>
                     <operand localId="852" locator="320:50-320:57" name="LookBack" xsi:type="OperandRef"/>
                  </low>
                  <high localId="857" locator="320:60-320:64" xsi:type="Now"/>
               </operand>
            </where>
         </expression>
         <operand localId="840" name="ServiceRequestList">
            <operandTypeSpecifier localId="838" locator="318:59-318:78" xsi:type="ListTypeSpecifier">
               <elementType localId="839" locator="318:64-318:77" name="fhir:ServiceRequest" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="842" name="LookBack">
            <operandTypeSpecifier localId="841" locator="318:90-318:104" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="864" locator="334:1-338:80" name="ActiveMedicationStatement" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="864">
               <a:s>// -------------------------------------------------- MEDICATIONS ------------------------------------------------------

/**
 * Medications that are active, according to a statement, but not necessarily verified via a prescription.  For example,
 * medications that a patient has self-reported to be taking.  This may, however, also represent medications that are
 * expected to be active after providing a prescription (e.g., clinician-reported). In FHIR R4, this is reflected by
 * MedicationStatement with status 'active' and no end date or an end date in the future.
 * TODO: Rename to Active once the execution engine supports overloaded functions.
 * @see http://hl7.org/fhir/R4/valueset-medication-statement-status.html
 * @param MedList - a list of MedicationStatements
 * @returns {List&lt;MedicationStatement>} a list of active medication statements, or null if null was passed in
 */
define function ActiveMedicationStatement(MedList List&lt;MedicationStatement>):
  </a:s>
               <a:s r="896">
                  <a:s r="896">
                     <a:s>
                        <a:s r="868">
                           <a:s r="869">
                              <a:s>
                                 <a:s>MedList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> M</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="870">
                           <a:s>EffectivePeriod: </a:s>
                           <a:s r="875">
                              <a:s>PeriodToInterval(</a:s>
                              <a:s r="871">
                                 <a:s r="873">
                                    <a:s r="872">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="873">
                                       <a:s>effective</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> as </a:s>
                                 <a:s r="874">
                                    <a:s>FHIR.Period</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="876">
                        <a:s>where </a:s>
                        <a:s r="876">
                           <a:s r="877">
                              <a:s r="880">
                                 <a:s r="879">
                                    <a:s r="878">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="879">
                                       <a:s>status</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="880">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="881">
                                 <a:s>'active'</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      and </a:s>
                           <a:s r="884">
                              <a:s>(</a:s>
                              <a:s r="884">
                                 <a:s r="887">
                                    <a:s r="885">
                                       <a:s>end of </a:s>
                                       <a:s r="886">
                                          <a:s>EffectivePeriod</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> is null</a:s>
                                 </a:s>
                                 <a:s> or </a:s>
                                 <a:s r="893">
                                    <a:s r="888">
                                       <a:s>end of </a:s>
                                       <a:s r="889">
                                          <a:s>EffectivePeriod</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s r="893"> after </a:s>
                                    <a:s r="892">
                                       <a:s>Now()</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="896" locator="335:3-338:80" xsi:type="Query">
            <source localId="868" locator="335:3-335:11" alias="M">
               <expression localId="869" locator="335:3-335:9" name="MedList" xsi:type="OperandRef"/>
            </source>
            <let localId="870" locator="336:9-336:69" identifier="EffectivePeriod">
               <expression localId="875" locator="336:26-336:69" name="PeriodToInterval" xsi:type="FunctionRef">
                  <operand localId="871" locator="336:43-336:68" strict="false" xsi:type="As">
                     <operand localId="873" locator="336:43-336:53" path="effective" scope="M" xsi:type="Property"/>
                     <asTypeSpecifier localId="874" locator="336:58-336:68" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                  </operand>
               </expression>
            </let>
            <where localId="876" locator="337:5-338:80" xsi:type="And">
               <operand localId="877" locator="337:11-337:35" xsi:type="Equal">
                  <signature localId="882" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="883" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="880" locator="337:11-337:24" path="value" xsi:type="Property">
                     <source localId="879" locator="337:11-337:18" path="status" scope="M" xsi:type="Property"/>
                  </operand>
                  <operand localId="881" locator="337:28-337:35" valueType="t:String" value="active" xsi:type="Literal"/>
               </operand>
               <operand localId="884" locator="338:11-338:80" xsi:type="Or">
                  <operand localId="887" locator="338:12-338:41" xsi:type="IsNull">
                     <operand localId="885" locator="338:12-338:33" xsi:type="End">
                        <operand localId="886" locator="338:19-338:33" name="EffectivePeriod" xsi:type="QueryLetRef"/>
                     </operand>
                  </operand>
                  <operand localId="893" locator="338:46-338:79" xsi:type="After">
                     <signature localId="894" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="895" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="888" locator="338:46-338:67" xsi:type="End">
                        <operand localId="889" locator="338:53-338:67" name="EffectivePeriod" xsi:type="QueryLetRef"/>
                     </operand>
                     <operand localId="892" locator="338:75-338:79" xsi:type="Now"/>
                  </operand>
               </operand>
            </where>
         </expression>
         <operand localId="867" name="MedList">
            <operandTypeSpecifier localId="865" locator="334:51-334:75" xsi:type="ListTypeSpecifier">
               <elementType localId="866" locator="334:56-334:74" name="fhir:MedicationStatement" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="897" locator="355:1-356:43" name="ActiveMedicationRequest" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="897">
               <a:s>/**
* Medication requests that are active.  In FHIR R4, this is reflected by MedicationRequest with status 'active'.
* Note that in R4, the MedicationRequest Boundaries and Relationships now says: &quot;When reporting on the usage of
* a medication by a patient, the MedicationStatement resource should be used.&quot; It also indicates that:
* &quot;A medication statement is not a part of the prescribe->dispense->administer sequence but is a report that
* such a sequence (or at least a part of it) did take place resulting in a belief that the patient has received
* a particular medication.&quot; In this regard, MedicationStatement is more appropriate as an indication of an actually
* active medication, although it's not clear if vendors really will automatically create MedicationStatements in
* these cases or not.  Until we know, MedicationRequest may be the best proxy we have for an active medication.
* TODO: Should the &quot;intent&quot; field be considered (e.g., is it still active if intent is &quot;proposal&quot; or &quot;plan&quot;)?
* TODO: Rename to Active once the execution engine supports overloaded functions.
* @see http://hl7.org/fhir/R4/valueset-medicationrequest-status.html
* @param MedList - a list of MedicationRequests
* @returns {List&lt;MedicationRequest>} a list of active medication requests, or null if null was passed in
*/
define function ActiveMedicationRequest(MedList List&lt;MedicationRequest>):
  </a:s>
               <a:s r="910">
                  <a:s r="910">
                     <a:s>
                        <a:s r="901">
                           <a:s r="902">
                              <a:s>
                                 <a:s>MedList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> M</a:s>
                        </a:s>
                     </a:s>
                     <a:s> </a:s>
                     <a:s r="903">
                        <a:s>where </a:s>
                        <a:s r="903">
                           <a:s r="906">
                              <a:s r="905">
                                 <a:s r="904">
                                    <a:s>M</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="905">
                                    <a:s>status</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="906">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> = </a:s>
                           <a:s r="907">
                              <a:s>'active'</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="910" locator="356:3-356:43" xsi:type="Query">
            <source localId="901" locator="356:3-356:11" alias="M">
               <expression localId="902" locator="356:3-356:9" name="MedList" xsi:type="OperandRef"/>
            </source>
            <where localId="903" locator="356:13-356:43" xsi:type="Equal">
               <signature localId="908" name="t:String" xsi:type="NamedTypeSpecifier"/>
               <signature localId="909" name="t:String" xsi:type="NamedTypeSpecifier"/>
               <operand localId="906" locator="356:19-356:32" path="value" xsi:type="Property">
                  <source localId="905" locator="356:19-356:26" path="status" scope="M" xsi:type="Property"/>
               </operand>
               <operand localId="907" locator="356:36-356:43" valueType="t:String" value="active" xsi:type="Literal"/>
            </where>
         </expression>
         <operand localId="900" name="MedList">
            <operandTypeSpecifier localId="898" locator="355:49-355:71" xsi:type="ListTypeSpecifier">
               <elementType localId="899" locator="355:54-355:70" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="911" locator="366:1-369:37" name="ActiveOrCompletedMedicationRequest" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="911">
               <a:s>/**
* Medication requests that are active or completed, according to a prescription.  In FHIR R4, this is reflected by MedicationRequest
* with status 'active' or 'completed'.  See the note above (in ActiveMedicationRequest) for more nuance regarding MedicationRequest
* vs. MedicationStatement.
* @see http://hl7.org/fhir/R4/valueset-medicationrequest-status.html
* @param MedList - a list of MedicationRequests
* @returns {List&lt;MedicationRequest>} a list of active medication requests, or null if null was passed in
*/
define function ActiveOrCompletedMedicationRequest(MedList List&lt;MedicationRequest>):
  </a:s>
               <a:s r="932">
                  <a:s r="932">
                     <a:s>
                        <a:s r="915">
                           <a:s r="916">
                              <a:s>
                                 <a:s>MedList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> M</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="917">
                        <a:s>where </a:s>
                        <a:s r="917">
                           <a:s r="918">
                              <a:s r="921">
                                 <a:s r="920">
                                    <a:s r="919">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="920">
                                       <a:s>status</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="921">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="922">
                                 <a:s>'active'</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      or </a:s>
                           <a:s r="925">
                              <a:s r="928">
                                 <a:s r="927">
                                    <a:s r="926">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="927">
                                       <a:s>status</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="928">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="929">
                                 <a:s>'completed'</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="932" locator="367:3-369:37" xsi:type="Query">
            <source localId="915" locator="367:3-367:11" alias="M">
               <expression localId="916" locator="367:3-367:9" name="MedList" xsi:type="OperandRef"/>
            </source>
            <where localId="917" locator="368:5-369:37" xsi:type="Or">
               <operand localId="918" locator="368:11-368:35" xsi:type="Equal">
                  <signature localId="923" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="924" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="921" locator="368:11-368:24" path="value" xsi:type="Property">
                     <source localId="920" locator="368:11-368:18" path="status" scope="M" xsi:type="Property"/>
                  </operand>
                  <operand localId="922" locator="368:28-368:35" valueType="t:String" value="active" xsi:type="Literal"/>
               </operand>
               <operand localId="925" locator="369:10-369:37" xsi:type="Equal">
                  <signature localId="930" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="931" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="928" locator="369:10-369:23" path="value" xsi:type="Property">
                     <source localId="927" locator="369:10-369:17" path="status" scope="M" xsi:type="Property"/>
                  </operand>
                  <operand localId="929" locator="369:27-369:37" valueType="t:String" value="completed" xsi:type="Literal"/>
               </operand>
            </where>
         </expression>
         <operand localId="914" name="MedList">
            <operandTypeSpecifier localId="912" locator="366:60-366:82" xsi:type="ListTypeSpecifier">
               <elementType localId="913" locator="366:65-366:81" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="933" locator="382:1-385:37" name="ActiveOrCompletedMedicationStatement" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="933">
               <a:s>/**
 * Medications that are active or completed, according to a statement, but not necessarily verified via a prescription.
 * For example, medications that a patient has self-reported to be taking.  This may, however, also represent
 * medications that are expected to be active after providing a prescription (e.g., clinician-reported).  In FHIR R4,
 * this is reflected by MedicationStatement with status 'active' or 'completed'.
 * TODO: Rename to ActiveOrCompleted once the execution engine supports overloaded functions.
 * @see http://hl7.org/fhir/R4/valueset-medication-statement-status.html
 * @param MedList - a list of MedicationStatements
 * @returns {List&lt;MedicationStatement>} a list of active or completed medication statements, or null if null was passed
 *   in
 */
define function ActiveOrCompletedMedicationStatement(MedList List&lt;MedicationStatement>):
  </a:s>
               <a:s r="954">
                  <a:s r="954">
                     <a:s>
                        <a:s r="937">
                           <a:s r="938">
                              <a:s>
                                 <a:s>MedList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> M</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="939">
                        <a:s>where </a:s>
                        <a:s r="939">
                           <a:s r="940">
                              <a:s r="943">
                                 <a:s r="942">
                                    <a:s r="941">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="942">
                                       <a:s>status</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="943">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="944">
                                 <a:s>'active'</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      or </a:s>
                           <a:s r="947">
                              <a:s r="950">
                                 <a:s r="949">
                                    <a:s r="948">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="949">
                                       <a:s>status</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="950">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="951">
                                 <a:s>'completed'</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="954" locator="383:3-385:37" xsi:type="Query">
            <source localId="937" locator="383:3-383:11" alias="M">
               <expression localId="938" locator="383:3-383:9" name="MedList" xsi:type="OperandRef"/>
            </source>
            <where localId="939" locator="384:5-385:37" xsi:type="Or">
               <operand localId="940" locator="384:11-384:35" xsi:type="Equal">
                  <signature localId="945" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="946" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="943" locator="384:11-384:24" path="value" xsi:type="Property">
                     <source localId="942" locator="384:11-384:18" path="status" scope="M" xsi:type="Property"/>
                  </operand>
                  <operand localId="944" locator="384:28-384:35" valueType="t:String" value="active" xsi:type="Literal"/>
               </operand>
               <operand localId="947" locator="385:10-385:37" xsi:type="Equal">
                  <signature localId="952" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="953" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="950" locator="385:10-385:23" path="value" xsi:type="Property">
                     <source localId="949" locator="385:10-385:17" path="status" scope="M" xsi:type="Property"/>
                  </operand>
                  <operand localId="951" locator="385:27-385:37" valueType="t:String" value="completed" xsi:type="Literal"/>
               </operand>
            </where>
         </expression>
         <operand localId="936" name="MedList">
            <operandTypeSpecifier localId="934" locator="382:62-382:86" xsi:type="ListTypeSpecifier">
               <elementType localId="935" locator="382:67-382:85" name="fhir:MedicationStatement" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="955" locator="395:1-399:35" name="ActiveCompletedOrStoppedMedicationRequest" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="955">
               <a:s>/**
* Medication requests that are active, completed, or stopped, according to a prescription.  In FHIR R4, this is
* reflected by MedicationRequest with status 'active', 'completed', or 'stopped'. See the note above
* (in ActiveMedicationRequest) for more nuance regarding MedicationRequest vs. MedicationStatement.
* @see http://hl7.org/fhir/R4/valueset-medicationrequest-status.html
* @param MedList - a list of MedicationOrders
* @returns {List&lt;MedicationRequestr>} a list of active medication requests, or null if null was passed in
*/
define function ActiveCompletedOrStoppedMedicationRequest(MedList List&lt;MedicationRequest>):
  </a:s>
               <a:s r="984">
                  <a:s r="984">
                     <a:s>
                        <a:s r="959">
                           <a:s r="960">
                              <a:s>
                                 <a:s>MedList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> M</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="961">
                        <a:s>where </a:s>
                        <a:s r="961">
                           <a:s r="962">
                              <a:s r="963">
                                 <a:s r="966">
                                    <a:s r="965">
                                       <a:s r="964">
                                          <a:s>M</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="965">
                                          <a:s>status</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="966">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> = </a:s>
                                 <a:s r="967">
                                    <a:s>'active'</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
      or </a:s>
                              <a:s r="970">
                                 <a:s r="973">
                                    <a:s r="972">
                                       <a:s r="971">
                                          <a:s>M</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="972">
                                          <a:s>status</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="973">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> = </a:s>
                                 <a:s r="974">
                                    <a:s>'completed'</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      or </a:s>
                           <a:s r="977">
                              <a:s r="980">
                                 <a:s r="979">
                                    <a:s r="978">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="979">
                                       <a:s>status</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="980">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="981">
                                 <a:s>'stopped'</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="984" locator="396:3-399:35" xsi:type="Query">
            <source localId="959" locator="396:3-396:11" alias="M">
               <expression localId="960" locator="396:3-396:9" name="MedList" xsi:type="OperandRef"/>
            </source>
            <where localId="961" locator="397:5-399:35" xsi:type="Or">
               <operand localId="962" locator="397:11-398:37" xsi:type="Or">
                  <operand localId="963" locator="397:11-397:35" xsi:type="Equal">
                     <signature localId="968" name="t:String" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="969" name="t:String" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="966" locator="397:11-397:24" path="value" xsi:type="Property">
                        <source localId="965" locator="397:11-397:18" path="status" scope="M" xsi:type="Property"/>
                     </operand>
                     <operand localId="967" locator="397:28-397:35" valueType="t:String" value="active" xsi:type="Literal"/>
                  </operand>
                  <operand localId="970" locator="398:10-398:37" xsi:type="Equal">
                     <signature localId="975" name="t:String" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="976" name="t:String" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="973" locator="398:10-398:23" path="value" xsi:type="Property">
                        <source localId="972" locator="398:10-398:17" path="status" scope="M" xsi:type="Property"/>
                     </operand>
                     <operand localId="974" locator="398:27-398:37" valueType="t:String" value="completed" xsi:type="Literal"/>
                  </operand>
               </operand>
               <operand localId="977" locator="399:10-399:35" xsi:type="Equal">
                  <signature localId="982" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="983" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="980" locator="399:10-399:23" path="value" xsi:type="Property">
                     <source localId="979" locator="399:10-399:17" path="status" scope="M" xsi:type="Property"/>
                  </operand>
                  <operand localId="981" locator="399:27-399:35" valueType="t:String" value="stopped" xsi:type="Literal"/>
               </operand>
            </where>
         </expression>
         <operand localId="958" name="MedList">
            <operandTypeSpecifier localId="956" locator="395:67-395:89" xsi:type="ListTypeSpecifier">
               <elementType localId="957" locator="395:72-395:88" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="985" locator="409:1-412:48" name="MedicationRequestLookBack" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="985">
               <a:s>/**
* Medication requests that are issued in the specified &quot;look back&quot; period.
* TODO: Rename to LookBack once the execution engine supports overloaded functions.
* @param MedList - a list of MedicationRequests
* @param LookBack - the lookback period for when the medication was prescribed
* @returns {List&lt;MedicationRequest>} a list of MedicationRequests prescribed in the look back period, or null if null
* was passed in
*/
define function MedicationRequestLookBack(MedList List&lt;MedicationRequest>, LookBack System.Quantity):
  </a:s>
               <a:s r="1013">
                  <a:s r="1013">
                     <a:s>
                        <a:s r="991">
                           <a:s r="992">
                              <a:s>
                                 <a:s>MedList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> M</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="993">
                           <a:s>LookBackInterval: </a:s>
                           <a:s r="1004">
                              <a:s>Interval[</a:s>
                              <a:s r="994">
                                 <a:s r="997">
                                    <a:s>Now()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="998">
                                    <a:s>LookBack</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="1003">
                                 <a:s>Now()</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1009">
                        <a:s>where </a:s>
                        <a:s r="1009">
                           <a:s r="1007">
                              <a:s r="1006">
                                 <a:s r="1005">
                                    <a:s>M</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1006">
                                    <a:s>authoredOn</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1007">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> in </a:s>
                           <a:s r="1008">
                              <a:s>LookBackInterval</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1013" locator="410:3-412:48" xsi:type="Query">
            <source localId="991" locator="410:3-410:11" alias="M">
               <expression localId="992" locator="410:3-410:9" name="MedList" xsi:type="OperandRef"/>
            </source>
            <let localId="993" locator="411:9-411:59" identifier="LookBackInterval">
               <expression localId="1004" locator="411:27-411:59" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="994" locator="411:36-411:51" xsi:type="Subtract">
                     <signature localId="999" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1000" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="997" locator="411:36-411:40" xsi:type="Now"/>
                     <operand localId="998" locator="411:44-411:51" name="LookBack" xsi:type="OperandRef"/>
                  </low>
                  <high localId="1003" locator="411:54-411:58" xsi:type="Now"/>
               </expression>
            </let>
            <where localId="1009" locator="412:5-412:48" xsi:type="In">
               <signature localId="1010" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               <signature localId="1011" xsi:type="IntervalTypeSpecifier">
                  <pointType localId="1012" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               </signature>
               <operand localId="1007" locator="412:11-412:28" path="value" xsi:type="Property">
                  <source localId="1006" locator="412:11-412:22" path="authoredOn" scope="M" xsi:type="Property"/>
               </operand>
               <operand localId="1008" locator="412:33-412:48" name="LookBackInterval" xsi:type="QueryLetRef"/>
            </where>
         </expression>
         <operand localId="988" name="MedList">
            <operandTypeSpecifier localId="986" locator="409:51-409:73" xsi:type="ListTypeSpecifier">
               <elementType localId="987" locator="409:56-409:72" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="990" name="LookBack">
            <operandTypeSpecifier localId="989" locator="409:85-409:99" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1014" locator="423:1-427:79" name="MedicationStatementLookBack" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1014">
               <a:s>// DSTU2 also checked the dateEnded property of MedicationOrder, but this doesn't exist for MedicationRequest

/**
* Medication Statements that are issued in the specified &quot;look back&quot; period.
* TODO: Rename to LookBack once the execution engine supports overloaded functions.
* @param MedList - a list of MedicationStatements
* @param LookBack - the lookback period for when the medication was prescribed
* @returns {List&lt;MedicationStatement>} a list of MedicationStatements prescribed in the look back period, or null if null
* was passed in
*/
define function MedicationStatementLookBack(MedList List&lt;MedicationStatement>, LookBack System.Quantity):
  </a:s>
               <a:s r="1052">
                  <a:s r="1052">
                     <a:s>
                        <a:s r="1020">
                           <a:s r="1021">
                              <a:s>
                                 <a:s>MedList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> M</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="1022">
                           <a:s>LookBackInterval: </a:s>
                           <a:s r="1033">
                              <a:s>Interval[</a:s>
                              <a:s r="1023">
                                 <a:s r="1026">
                                    <a:s>Now()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="1027">
                                    <a:s>LookBack</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="1032">
                                 <a:s>Now()</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1034">
                        <a:s>where </a:s>
                        <a:s r="1034">
                           <a:s r="1041">
                              <a:s r="1039">
                                 <a:s r="1035">
                                    <a:s>(</a:s>
                                    <a:s r="1035">
                                       <a:s r="1037">
                                          <a:s r="1036">
                                             <a:s>M</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="1037">
                                             <a:s>effective</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> as </a:s>
                                       <a:s r="1038">
                                          <a:s>FHIR.dateTime</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1039">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> in </a:s>
                              <a:s r="1040">
                                 <a:s>LookBackInterval</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      or </a:s>
                           <a:s r="1051">
                              <a:s r="1049">
                                 <a:s>PeriodToInterval(</a:s>
                                 <a:s r="1045">
                                    <a:s r="1047">
                                       <a:s r="1046">
                                          <a:s>M</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="1047">
                                          <a:s>effective</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> as </a:s>
                                    <a:s r="1048">
                                       <a:s>FHIR.Period</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="1051"> overlaps </a:s>
                              <a:s r="1050">
                                 <a:s>LookBackInterval</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1052" locator="424:3-427:79" xsi:type="Query">
            <source localId="1020" locator="424:3-424:11" alias="M">
               <expression localId="1021" locator="424:3-424:9" name="MedList" xsi:type="OperandRef"/>
            </source>
            <let localId="1022" locator="425:9-425:59" identifier="LookBackInterval">
               <expression localId="1033" locator="425:27-425:59" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="1023" locator="425:36-425:51" xsi:type="Subtract">
                     <signature localId="1028" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1029" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1026" locator="425:36-425:40" xsi:type="Now"/>
                     <operand localId="1027" locator="425:44-425:51" name="LookBack" xsi:type="OperandRef"/>
                  </low>
                  <high localId="1032" locator="425:54-425:58" xsi:type="Now"/>
               </expression>
            </let>
            <where localId="1034" locator="426:5-427:79" xsi:type="Or">
               <operand localId="1041" locator="426:11-426:66" xsi:type="In">
                  <signature localId="1042" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="1043" xsi:type="IntervalTypeSpecifier">
                     <pointType localId="1044" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  </signature>
                  <operand localId="1039" locator="426:11-426:46" path="value" xsi:type="Property">
                     <source localId="1035" locator="426:11-426:40" strict="false" xsi:type="As">
                        <operand localId="1037" locator="426:12-426:22" path="effective" scope="M" xsi:type="Property"/>
                        <asTypeSpecifier localId="1038" locator="426:27-426:39" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                     </source>
                  </operand>
                  <operand localId="1040" locator="426:51-426:66" name="LookBackInterval" xsi:type="QueryLetRef"/>
               </operand>
               <operand localId="1051" locator="427:10-427:79" xsi:type="Overlaps">
                  <operand localId="1049" locator="427:10-427:53" name="PeriodToInterval" xsi:type="FunctionRef">
                     <operand localId="1045" locator="427:27-427:52" strict="false" xsi:type="As">
                        <operand localId="1047" locator="427:27-427:37" path="effective" scope="M" xsi:type="Property"/>
                        <asTypeSpecifier localId="1048" locator="427:42-427:52" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                     </operand>
                  </operand>
                  <operand localId="1050" locator="427:64-427:79" name="LookBackInterval" xsi:type="QueryLetRef"/>
               </operand>
            </where>
         </expression>
         <operand localId="1017" name="MedList">
            <operandTypeSpecifier localId="1015" locator="423:53-423:77" xsi:type="ListTypeSpecifier">
               <elementType localId="1016" locator="423:58-423:76" name="fhir:MedicationStatement" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="1019" name="LookBack">
            <operandTypeSpecifier localId="1018" locator="423:89-423:103" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1053" locator="437:1-441:47" name="MedicationDispenseLookBack" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1053">
               <a:s>/**
* Medication Dispenses that are handed over or prepared in the specified &quot;look back&quot; period.
* TODO: Rename to LookBack once the execution engine supports overloaded functions.
* @param MedList - a list of MedicationDispenses
* @param LookBack - the lookback period for when the medication was prescribed
* @returns {List&lt;MedicationStatement>} a list of MedicationDispenses handed over or prepared in the look back period,
* or null if null was passed in
*/
define function MedicationDispenseLookBack(MedList List&lt;MedicationDispense>, LookBack System.Quantity):
  </a:s>
               <a:s r="1090">
                  <a:s r="1090">
                     <a:s>
                        <a:s r="1059">
                           <a:s r="1060">
                              <a:s>
                                 <a:s>MedList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> M</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="1061">
                           <a:s>LookBackInterval: </a:s>
                           <a:s r="1072">
                              <a:s>Interval[</a:s>
                              <a:s r="1062">
                                 <a:s r="1065">
                                    <a:s>Now()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="1066">
                                    <a:s>LookBack</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="1071">
                                 <a:s>Now()</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1073">
                        <a:s>where </a:s>
                        <a:s r="1073">
                           <a:s r="1078">
                              <a:s r="1076">
                                 <a:s r="1075">
                                    <a:s r="1074">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1075">
                                       <a:s>whenHandedOver</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1076">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> in </a:s>
                              <a:s r="1077">
                                 <a:s>LookBackInterval</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
    or </a:s>
                           <a:s r="1086">
                              <a:s r="1084">
                                 <a:s r="1083">
                                    <a:s r="1082">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1083">
                                       <a:s>whenPrepared</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1084">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> in </a:s>
                              <a:s r="1085">
                                 <a:s>LookBackInterval</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1090" locator="438:3-441:47" xsi:type="Query">
            <source localId="1059" locator="438:3-438:11" alias="M">
               <expression localId="1060" locator="438:3-438:9" name="MedList" xsi:type="OperandRef"/>
            </source>
            <let localId="1061" locator="439:9-439:59" identifier="LookBackInterval">
               <expression localId="1072" locator="439:27-439:59" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="1062" locator="439:36-439:51" xsi:type="Subtract">
                     <signature localId="1067" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1068" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1065" locator="439:36-439:40" xsi:type="Now"/>
                     <operand localId="1066" locator="439:44-439:51" name="LookBack" xsi:type="OperandRef"/>
                  </low>
                  <high localId="1071" locator="439:54-439:58" xsi:type="Now"/>
               </expression>
            </let>
            <where localId="1073" locator="440:5-441:47" xsi:type="Or">
               <operand localId="1078" locator="440:11-440:52" xsi:type="In">
                  <signature localId="1079" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="1080" xsi:type="IntervalTypeSpecifier">
                     <pointType localId="1081" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  </signature>
                  <operand localId="1076" locator="440:11-440:32" path="value" xsi:type="Property">
                     <source localId="1075" locator="440:11-440:26" path="whenHandedOver" scope="M" xsi:type="Property"/>
                  </operand>
                  <operand localId="1077" locator="440:37-440:52" name="LookBackInterval" xsi:type="QueryLetRef"/>
               </operand>
               <operand localId="1086" locator="441:8-441:47" xsi:type="In">
                  <signature localId="1087" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="1088" xsi:type="IntervalTypeSpecifier">
                     <pointType localId="1089" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  </signature>
                  <operand localId="1084" locator="441:8-441:27" path="value" xsi:type="Property">
                     <source localId="1083" locator="441:8-441:21" path="whenPrepared" scope="M" xsi:type="Property"/>
                  </operand>
                  <operand localId="1085" locator="441:32-441:47" name="LookBackInterval" xsi:type="QueryLetRef"/>
               </operand>
            </where>
         </expression>
         <operand localId="1056" name="MedList">
            <operandTypeSpecifier localId="1054" locator="437:52-437:75" xsi:type="ListTypeSpecifier">
               <elementType localId="1055" locator="437:57-437:74" name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="1058" name="LookBack">
            <operandTypeSpecifier localId="1057" locator="437:87-437:101" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1091" locator="451:1-453:40" name="InProgress" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1091">
               <a:s>// -------------------------------------------------- ENCOUNTERS ------------------------------------------------------

/**
 * Encounters that are in progress. In FHIR R4, this is reflected by status: 'in-progress'.
 * @see http://hl7.org/fhir/R4/valueset-encounter-status.html
 * @param EncList - a list of Encounters
 * @returns {List&lt;Encounter>} a list of in progress encounters, or null if null was passed in
 */
define function InProgress(EncList List&lt;Encounter>):
  </a:s>
               <a:s r="1104">
                  <a:s r="1104">
                     <a:s>
                        <a:s r="1095">
                           <a:s r="1096">
                              <a:s>
                                 <a:s>EncList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> E</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1097">
                        <a:s>where </a:s>
                        <a:s r="1097">
                           <a:s r="1100">
                              <a:s r="1099">
                                 <a:s r="1098">
                                    <a:s>E</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1099">
                                    <a:s>status</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1100">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> = </a:s>
                           <a:s r="1101">
                              <a:s>'in-progress'</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1104" locator="452:3-453:40" xsi:type="Query">
            <source localId="1095" locator="452:3-452:11" alias="E">
               <expression localId="1096" locator="452:3-452:9" name="EncList" xsi:type="OperandRef"/>
            </source>
            <where localId="1097" locator="453:5-453:40" xsi:type="Equal">
               <signature localId="1102" name="t:String" xsi:type="NamedTypeSpecifier"/>
               <signature localId="1103" name="t:String" xsi:type="NamedTypeSpecifier"/>
               <operand localId="1100" locator="453:11-453:24" path="value" xsi:type="Property">
                  <source localId="1099" locator="453:11-453:18" path="status" scope="E" xsi:type="Property"/>
               </operand>
               <operand localId="1101" locator="453:28-453:40" valueType="t:String" value="in-progress" xsi:type="Literal"/>
            </where>
         </expression>
         <operand localId="1094" name="EncList">
            <operandTypeSpecifier localId="1092" locator="451:36-451:50" xsi:type="ListTypeSpecifier">
               <elementType localId="1093" locator="451:41-451:49" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="1105" locator="463:1-466:68" name="EncounterLookBack" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1105">
               <a:s>/**
 * Encounters performed in the specified &quot;look back&quot; period.
 * TODO: Rename to LookBack once the execution engine supports overloaded functions.
 * @param EncList - a list of Encounters
 * @param LookBack - the lookback period for when the encounter occurred
 * @returns {List&lt;Encounter>} a list of Encounters occurring during the look back period, or null if null
 * was passed in
 */
define function EncounterLookBack(EncList List&lt;Encounter>, LookBack System.Quantity):
  </a:s>
               <a:s r="1132">
                  <a:s r="1132">
                     <a:s>
                        <a:s r="1111">
                           <a:s r="1112">
                              <a:s>
                                 <a:s>EncList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> E</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="1113">
                           <a:s>LookBackInterval: </a:s>
                           <a:s r="1124">
                              <a:s>Interval[</a:s>
                              <a:s r="1114">
                                 <a:s r="1117">
                                    <a:s>Now()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="1118">
                                    <a:s>LookBack</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="1123">
                                 <a:s>Now()</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1131">
                        <a:s>where </a:s>
                        <a:s r="1131">
                           <a:s r="1128">
                              <a:s r="1125">
                                 <a:s>FHIRHelpers</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1128">
                                 <a:s>ToInterval(</a:s>
                                 <a:s r="1127">
                                    <a:s r="1126">
                                       <a:s>E</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1127">
                                       <a:s>period</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s r="1131"> overlaps </a:s>
                           <a:s r="1130">
                              <a:s>LookBackInterval</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1132" locator="464:3-466:68" xsi:type="Query">
            <source localId="1111" locator="464:3-464:11" alias="E">
               <expression localId="1112" locator="464:3-464:9" name="EncList" xsi:type="OperandRef"/>
            </source>
            <let localId="1113" locator="465:9-465:59" identifier="LookBackInterval">
               <expression localId="1124" locator="465:27-465:59" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="1114" locator="465:36-465:51" xsi:type="Subtract">
                     <signature localId="1119" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1120" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1117" locator="465:36-465:40" xsi:type="Now"/>
                     <operand localId="1118" locator="465:44-465:51" name="LookBack" xsi:type="OperandRef"/>
                  </low>
                  <high localId="1123" locator="465:54-465:58" xsi:type="Now"/>
               </expression>
            </let>
            <where localId="1131" locator="466:5-466:68" xsi:type="Overlaps">
               <operand localId="1128" locator="466:11-466:42" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <signature localId="1129" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="1127" locator="466:34-466:41" path="period" scope="E" xsi:type="Property"/>
               </operand>
               <operand localId="1130" locator="466:53-466:68" name="LookBackInterval" xsi:type="QueryLetRef"/>
            </where>
         </expression>
         <operand localId="1108" name="EncList">
            <operandTypeSpecifier localId="1106" locator="463:43-463:57" xsi:type="ListTypeSpecifier">
               <elementType localId="1107" locator="463:48-463:56" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="1110" name="LookBack">
            <operandTypeSpecifier localId="1109" locator="463:69-463:83" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1133" locator="478:1-481:62" name="ActiveOrConfirmedAllergyIntolerance" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1133">
               <a:s>// -------------------------------------------------- ALLERGY INTOLERANCES ------------------------------------------------------

/**
* AllergyIntolerances that are active or confirmed.  In FHIR STU3, this is reflected by AllergyIntolerance
* with clinicalStatus 'active' or verificationStatus 'confirmed'
* @see https://www.hl7.org/fhir/R4/valueset-allergy-clinical-status.html
* @see https://www.hl7.org/fhir/R4/valueset-allergy-verification-status.html
* @param AllergyIntolList - a list of AllergyIntolerances
* @returns {List&lt;AllergyIntolerance>} a list of active or confirmed allergy intolerances, or null if null was passed in
*/
define function ActiveOrConfirmedAllergyIntolerance(AllergyIntolList List&lt;AllergyIntolerance>):
  </a:s>
               <a:s r="1154">
                  <a:s r="1154">
                     <a:s>
                        <a:s r="1137">
                           <a:s r="1138">
                              <a:s>
                                 <a:s>AllergyIntolList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> A</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1139">
                        <a:s>where </a:s>
                        <a:s r="1139">
                           <a:s r="1140">
                              <a:s r="1142">
                                 <a:s r="1141">
                                    <a:s>A</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1142">
                                    <a:s>clinicalStatus</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> ~ </a:s>
                              <a:s r="1143">
                                 <a:s>&quot;AllergyIntolerance Active&quot;</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      or </a:s>
                           <a:s r="1147">
                              <a:s r="1149">
                                 <a:s r="1148">
                                    <a:s>A</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1149">
                                    <a:s>verificationStatus</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> ~ </a:s>
                              <a:s r="1150">
                                 <a:s>&quot;AllergyIntolerance Confirmed&quot;</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1154" locator="479:3-481:62" xsi:type="Query">
            <source localId="1137" locator="479:3-479:20" alias="A">
               <expression localId="1138" locator="479:3-479:18" name="AllergyIntolList" xsi:type="OperandRef"/>
            </source>
            <where localId="1139" locator="480:5-481:62" xsi:type="Or">
               <operand localId="1140" locator="480:11-480:56" xsi:type="Equivalent">
                  <signature localId="1145" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="1146" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="1144" name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand localId="1142" locator="480:11-480:26" path="clinicalStatus" scope="A" xsi:type="Property"/>
                  </operand>
                  <operand localId="1143" locator="480:30-480:56" name="AllergyIntolerance Active" xsi:type="ConceptRef"/>
               </operand>
               <operand localId="1147" locator="481:10-481:62" xsi:type="Equivalent">
                  <signature localId="1152" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="1153" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="1151" name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand localId="1149" locator="481:10-481:29" path="verificationStatus" scope="A" xsi:type="Property"/>
                  </operand>
                  <operand localId="1150" locator="481:33-481:62" name="AllergyIntolerance Confirmed" xsi:type="ConceptRef"/>
               </operand>
            </where>
         </expression>
         <operand localId="1136" name="AllergyIntolList">
            <operandTypeSpecifier localId="1134" locator="478:70-478:93" xsi:type="ListTypeSpecifier">
               <elementType localId="1135" locator="478:75-478:92" name="fhir:AllergyIntolerance" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="1155" locator="493:1-503:79" name="GoalLookBack" context="Unfiltered" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1155">
               <a:s>// -------------------------------------------------------- GOALS ------------------------------------------------------

/**
 * Goals with a start, target, or status date in the specified &quot;look back&quot; period.  For example, Pain Management Goals
 * in the last 2 years.
 * TODO: Rename to LookBack once the execution engine supports overloaded functions.
 * @param GoalList - a list of Goals
 * @returns {List&lt;Goal>} a list of Goals with a start, target, or status date in the specified lookback period, or null
 * if null was passed in
 */
define function GoalLookBack(GoalList List&lt;Goal>, LookBack System.Quantity):
  </a:s>
               <a:s r="1261">
                  <a:s r="1261">
                     <a:s>
                        <a:s r="1161">
                           <a:s r="1162">
                              <a:s>
                                 <a:s>GoalList</a:s>
                              </a:s>
                           </a:s>
                           <a:s> G</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="1163">
                           <a:s>LookBackInterval: </a:s>
                           <a:s r="1174">
                              <a:s>Interval[</a:s>
                              <a:s r="1164">
                                 <a:s r="1167">
                                    <a:s>Now()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="1168">
                                    <a:s>LookBack</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="1173">
                                 <a:s>Now()</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
    </a:s>
                        <a:s r="1175">
                           <a:s>StartDate: </a:s>
                           <a:s r="1180">
                              <a:s r="1176">
                                 <a:s>(</a:s>
                                 <a:s r="1176">
                                    <a:s r="1178">
                                       <a:s r="1177">
                                          <a:s>G</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="1178">
                                          <a:s>start</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> as </a:s>
                                    <a:s r="1179">
                                       <a:s>FHIR.date</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1180">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
    </a:s>
                        <a:s r="1181">
                           <a:s>StatusDate: </a:s>
                           <a:s r="1184">
                              <a:s r="1183">
                                 <a:s r="1182">
                                    <a:s>G</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1183">
                                    <a:s>statusDate</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1184">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
    </a:s>
                        <a:s r="1185">
                           <a:s>TargetDates: </a:s>
                           <a:s r="1195">
                              <a:s>
                                 <a:s r="1186">
                                    <a:s r="1188">
                                       <a:s>(</a:s>
                                       <a:s r="1188">
                                          <a:s r="1187">
                                             <a:s>G</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="1188">
                                             <a:s>target</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s> T</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> </a:s>
                              <a:s r="1189">
                                 <a:s>return </a:s>
                                 <a:s r="1194">
                                    <a:s r="1190">
                                       <a:s>(</a:s>
                                       <a:s r="1190">
                                          <a:s r="1192">
                                             <a:s r="1191">
                                                <a:s>T</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="1192">
                                                <a:s>due</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="1193">
                                             <a:s>FHIR.date</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1194">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
    </a:s>
                        <a:s r="1196">
                           <a:s>TargetQuantities: </a:s>
                           <a:s r="1207">
                              <a:s>
                                 <a:s r="1197">
                                    <a:s r="1199">
                                       <a:s>(</a:s>
                                       <a:s r="1199">
                                          <a:s r="1198">
                                             <a:s>G</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="1199">
                                             <a:s>target</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s> T</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> </a:s>
                              <a:s r="1200">
                                 <a:s>return </a:s>
                                 <a:s r="1206">
                                    <a:s r="1201">
                                       <a:s>FHIRHelpers</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1206">
                                       <a:s>ToQuantity(</a:s>
                                       <a:s r="1202">
                                          <a:s r="1204">
                                             <a:s r="1203">
                                                <a:s>T</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="1204">
                                                <a:s>due</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="1205">
                                             <a:s>FHIR.Duration</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1208">
                        <a:s>where </a:s>
                        <a:s r="1208">
                           <a:s r="1209">
                              <a:s r="1210">
                                 <a:s r="1213">
                                    <a:s r="1211">
                                       <a:s>StartDate</a:s>
                                    </a:s>
                                    <a:s> in </a:s>
                                    <a:s r="1212">
                                       <a:s>LookBackInterval</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>
      or </a:s>
                                 <a:s r="1222">
                                    <a:s r="1220">
                                       <a:s>StatusDate</a:s>
                                    </a:s>
                                    <a:s> in </a:s>
                                    <a:s r="1221">
                                       <a:s>LookBackInterval</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
      or </a:s>
                              <a:s r="1229">
                                 <a:s>exists</a:s>
                                 <a:s r="1241">
                                    <a:s>(</a:s>
                                    <a:s r="1241">
                                       <a:s>
                                          <a:s r="1230">
                                             <a:s r="1231">
                                                <a:s>
                                                   <a:s>TargetDates</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s> TD</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> </a:s>
                                       <a:s r="1234">
                                          <a:s>where </a:s>
                                          <a:s r="1234">
                                             <a:s r="1232">
                                                <a:s>TD</a:s>
                                             </a:s>
                                             <a:s> in </a:s>
                                             <a:s r="1233">
                                                <a:s>LookBackInterval</a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      or </a:s>
                           <a:s r="1242">
                              <a:s>exists</a:s>
                              <a:s r="1258">
                                 <a:s>(</a:s>
                                 <a:s r="1258">
                                    <a:s>
                                       <a:s r="1243">
                                          <a:s r="1244">
                                             <a:s>
                                                <a:s>TargetQuantities</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> TQ</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> </a:s>
                                    <a:s r="1251">
                                       <a:s>where </a:s>
                                       <a:s r="1251">
                                          <a:s r="1245">
                                             <a:s>(</a:s>
                                             <a:s r="1245">
                                                <a:s r="1246">
                                                   <a:s>StartDate</a:s>
                                                </a:s>
                                                <a:s> + </a:s>
                                                <a:s r="1247">
                                                   <a:s>TQ</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s>)</a:s>
                                          </a:s>
                                          <a:s> in </a:s>
                                          <a:s r="1250">
                                             <a:s>LookBackInterval</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1261" locator="494:3-503:79" xsi:type="Query">
            <source localId="1161" locator="494:3-494:12" alias="G">
               <expression localId="1162" locator="494:3-494:10" name="GoalList" xsi:type="OperandRef"/>
            </source>
            <let localId="1163" locator="495:9-495:59" identifier="LookBackInterval">
               <expression localId="1174" locator="495:27-495:59" lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low localId="1164" locator="495:36-495:51" xsi:type="Subtract">
                     <signature localId="1169" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1170" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1167" locator="495:36-495:40" xsi:type="Now"/>
                     <operand localId="1168" locator="495:44-495:51" name="LookBack" xsi:type="OperandRef"/>
                  </low>
                  <high localId="1173" locator="495:54-495:58" xsi:type="Now"/>
               </expression>
            </let>
            <let localId="1175" locator="496:5-496:43" identifier="StartDate">
               <expression localId="1180" locator="496:16-496:43" path="value" xsi:type="Property">
                  <source localId="1176" locator="496:16-496:37" strict="false" xsi:type="As">
                     <operand localId="1178" locator="496:17-496:23" path="start" scope="G" xsi:type="Property"/>
                     <asTypeSpecifier localId="1179" locator="496:28-496:36" name="fhir:date" xsi:type="NamedTypeSpecifier"/>
                  </source>
               </expression>
            </let>
            <let localId="1181" locator="497:5-497:34" identifier="StatusDate">
               <expression localId="1184" locator="497:17-497:34" path="value" xsi:type="Property">
                  <source localId="1183" locator="497:17-497:28" path="statusDate" scope="G" xsi:type="Property"/>
               </expression>
            </let>
            <let localId="1185" locator="498:5-498:63" identifier="TargetDates">
               <expression localId="1195" locator="498:18-498:63" xsi:type="Query">
                  <source localId="1186" locator="498:18-498:29" alias="T">
                     <expression localId="1188" locator="498:18-498:27" path="target" scope="G" xsi:type="Property"/>
                  </source>
                  <return localId="1189" locator="498:31-498:63">
                     <expression localId="1194" locator="498:38-498:63" path="value" xsi:type="Property">
                        <source localId="1190" locator="498:38-498:57" strict="false" xsi:type="As">
                           <operand localId="1192" locator="498:39-498:43" path="due" scope="T" xsi:type="Property"/>
                           <asTypeSpecifier localId="1193" locator="498:48-498:56" name="fhir:date" xsi:type="NamedTypeSpecifier"/>
                        </source>
                     </expression>
                  </return>
               </expression>
            </let>
            <let localId="1196" locator="499:5-499:88" identifier="TargetQuantities">
               <expression localId="1207" locator="499:23-499:88" xsi:type="Query">
                  <source localId="1197" locator="499:23-499:34" alias="T">
                     <expression localId="1199" locator="499:23-499:32" path="target" scope="G" xsi:type="Property"/>
                  </source>
                  <return localId="1200" locator="499:36-499:88">
                     <expression localId="1206" locator="499:43-499:88" name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand localId="1202" locator="499:66-499:87" strict="false" xsi:type="As">
                           <operand localId="1204" locator="499:66-499:70" path="due" scope="T" xsi:type="Property"/>
                           <asTypeSpecifier localId="1205" locator="499:75-499:87" name="fhir:Duration" xsi:type="NamedTypeSpecifier"/>
                        </operand>
                     </expression>
                  </return>
               </expression>
            </let>
            <where localId="1208" locator="500:5-503:79" xsi:type="Or">
               <operand localId="1209" locator="500:11-502:60" xsi:type="Or">
                  <operand localId="1210" locator="500:11-501:39" xsi:type="Or">
                     <operand localId="1213" locator="500:11-500:39" xsi:type="In">
                        <signature localId="1217" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        <signature localId="1218" xsi:type="IntervalTypeSpecifier">
                           <pointType localId="1219" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        </signature>
                        <operand localId="1215" xsi:type="ToDateTime">
                           <signature localId="1216" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1211" locator="500:11-500:19" name="StartDate" xsi:type="QueryLetRef"/>
                        </operand>
                        <operand localId="1212" locator="500:24-500:39" name="LookBackInterval" xsi:type="QueryLetRef"/>
                     </operand>
                     <operand localId="1222" locator="501:10-501:39" xsi:type="In">
                        <signature localId="1226" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        <signature localId="1227" xsi:type="IntervalTypeSpecifier">
                           <pointType localId="1228" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        </signature>
                        <operand localId="1224" xsi:type="ToDateTime">
                           <signature localId="1225" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1220" locator="501:10-501:19" name="StatusDate" xsi:type="QueryLetRef"/>
                        </operand>
                        <operand localId="1221" locator="501:24-501:39" name="LookBackInterval" xsi:type="QueryLetRef"/>
                     </operand>
                  </operand>
                  <operand localId="1229" locator="502:10-502:60" xsi:type="Exists">
                     <operand localId="1241" locator="502:16-502:60" xsi:type="Query">
                        <source localId="1230" locator="502:17-502:30" alias="TD">
                           <expression localId="1231" locator="502:17-502:27" name="TargetDates" xsi:type="QueryLetRef"/>
                        </source>
                        <where localId="1234" locator="502:32-502:59" xsi:type="In">
                           <signature localId="1238" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           <signature localId="1239" xsi:type="IntervalTypeSpecifier">
                              <pointType localId="1240" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           </signature>
                           <operand localId="1236" xsi:type="ToDateTime">
                              <signature localId="1237" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                              <operand localId="1232" locator="502:38-502:39" name="TD" xsi:type="AliasRef"/>
                           </operand>
                           <operand localId="1233" locator="502:44-502:59" name="LookBackInterval" xsi:type="QueryLetRef"/>
                        </where>
                     </operand>
                  </operand>
               </operand>
               <operand localId="1242" locator="503:10-503:79" xsi:type="Exists">
                  <signature localId="1259" xsi:type="ListTypeSpecifier">
                     <elementType localId="1260" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                  </signature>
                  <operand localId="1258" locator="503:16-503:79" xsi:type="Query">
                     <source localId="1243" locator="503:17-503:35" alias="TQ">
                        <expression localId="1244" locator="503:17-503:32" name="TargetQuantities" xsi:type="QueryLetRef"/>
                     </source>
                     <where localId="1251" locator="503:37-503:78" xsi:type="In">
                        <signature localId="1255" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        <signature localId="1256" xsi:type="IntervalTypeSpecifier">
                           <pointType localId="1257" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        </signature>
                        <operand localId="1253" xsi:type="ToDateTime">
                           <signature localId="1254" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1245" locator="503:43-503:58" xsi:type="Add">
                              <signature localId="1248" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                              <signature localId="1249" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                              <operand localId="1246" locator="503:44-503:52" name="StartDate" xsi:type="QueryLetRef"/>
                              <operand localId="1247" locator="503:56-503:57" name="TQ" xsi:type="AliasRef"/>
                           </operand>
                        </operand>
                        <operand localId="1250" locator="503:63-503:78" name="LookBackInterval" xsi:type="QueryLetRef"/>
                     </where>
                  </operand>
               </operand>
            </where>
         </expression>
         <operand localId="1158" name="GoalList">
            <operandTypeSpecifier localId="1156" locator="493:39-493:48" xsi:type="ListTypeSpecifier">
               <elementType localId="1157" locator="493:44-493:47" name="fhir:Goal" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="1160" name="LookBack">
            <operandTypeSpecifier localId="1159" locator="493:60-493:74" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
   </statements>
</library>
